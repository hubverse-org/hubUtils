[{"path":[]},{"path":"https://hubverse-org.github.io/hubUtils/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying standards acceptable behavior. Enforcement responsibility Code Conduct Committee, take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Instances abusive, harassing, otherwise unacceptable behavior may reported member Code Conduct Committee. complaints reviewed investigated promptly fairly. Code Conduct Committee use Enforcement Manual determining consequences action deem violation Code Conduct. community leaders Code Conduct Committee members obligated respect privacy security reporter incident.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to hubUtils","title":"Contributing to hubUtils","text":"outlines propose change hubUtils. general info contributing , hubverse packages, please see hubverse contributing guide. can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to hubUtils","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). procedures contributing bigger changes, code particular, generally follow advised tidyverse dev team, including following tidyverse style guide code recording user facing changes NEWS.md.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to hubUtils","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"hubverse-org/hubUtils\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Follow pull request checklist create Git branch pull request (PR). recommend using usethis::pr_init(\"name/brief-description/issue\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first heading—usually labelled “development version”). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to hubUtils","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"synchronizing-with-hubverse-orgschemas","dir":"","previous_headings":"","what":"Synchronizing with hubverse-org/schemas","title":"Contributing to hubUtils","text":"official home hubverse schemas https://github.com/hubverse-org/schemas. schemas copied inst/schemas folder, allows offline validation hubs. developing -development version hubverse schemas, must ensure schemas repository synchronized.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"synchronization-script","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas","what":"Synchronization script","title":"Contributing to hubUtils","text":"script synchronizes schemas data-raw/schemas.R can run within R, standalone script, git hook. takes one environment variable HUBUTILS_SCHEMA_BRANCH. environment variable unset, branch information inst/schemas/update.json used.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"usage-within-r","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas > Synchronization script","what":"Usage: within R","title":"Contributing to hubUtils","text":"","code":"source(\"data-raw/schemas.R\")"},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"usage-from-bash","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas > Synchronization script","what":"Usage: from BASH","title":"Contributing to hubUtils","text":"","code":"Rscript data-raw/schemas.R"},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"usage-commit-hook","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas > Synchronization script","what":"Usage: commit hook","title":"Contributing to hubUtils","text":"See Installing Git Hook. Git hook way run local script something Git. example, pre-push hook (one use ) run every time push remote repository.","code":"git push"},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"details","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas > Synchronization script","what":"Details","title":"Contributing to hubUtils","text":"default, script make single call GitHub API determine status recent commit branch listed inst/schemas/update.json. sha branch match timestamp ahead recent commit, good go! update needed, system git used clone branch copy inst/schemas. running script (interactive), schema update happens, tests re-run.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"synchronizing-a-development-branch","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas","what":"Synchronizing a development branch","title":"Contributing to hubUtils","text":"order synchronize development branch, set temporary environment variable called HUBUTILS_SCHEMA_BRANCH name branch. can done interactively R BASH script.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"via-r","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas > Synchronizing a development branch","what":"Via R","title":"Contributing to hubUtils","text":"","code":"Sys.setenv(\"HUBUTILS_SCHEMA_BRANCH\" = \"br-v4.0.1\") source(\"data-raw/schemas.R\") #> ✔ removing /path/to/hubUtils/inst/schemas #> ✔ Creating inst/schemas/. #> ℹ Fetching the latest version of the schemas from GitHub #> Cloning into '/path/to/temp/folder'... #> ✔ Copying v4.0.1, v4.0.0, v3.0.1, v3.0.0, v2.0.1, v2.0.0, v1.0.0, v0.0.1, v0.0.0.9, #>  and NEWS.md to inst/schemas #> [ ... snip ... ] #> ✔ Done #> ✔ Schemas up-to-date! #> ℹ branch: \"br-v4.0.1\" #> ℹ sha: \"43b2c8aceb3a316b7a1929dbe8d8ead2711d4e84\" #> ℹ timestamp: \"2024-12-19T16:40:16Z\" Sys.unsetenv(\"HUBUTILS_DEV_BRANCH\")"},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"via-bash","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas > Synchronizing a development branch","what":"Via BASH","title":"Contributing to hubUtils","text":"run via script (manually via git hook), synchronization happens, tests automatically run:","code":"HUBUTILS_SCHEMA_BRANCH=br-v4.0.1 Rscript data-raw/schemas.R \\ && unsetenv HUBUTILS_SCHEMA_BRANCH #> ✔ removing /path/to/hubUtils/inst/schemas #> ✔ Creating inst/schemas/. #> ℹ Fetching the latest version of the schemas from GitHub #> Cloning into '/path/to/temp/folder'... #> ✔ Copying v4.0.1, v4.0.0, v3.0.1, v3.0.0, v2.0.1, v2.0.0, v1.0.0, v0.0.1, v0.0.0.9, #>  and NEWS.md to inst/schemas #> [ ... snip ... ] #> ✔ Done #> ✔ Schemas up-to-date! #> ℹ branch: \"br-v4.0.1\" #> ℹ sha: \"43b2c8aceb3a316b7a1929dbe8d8ead2711d4e84\" #> ℹ timestamp: \"2024-12-19T16:40:16Z\" #> #> ── ⚠ schema updated ── #> #> ! Re-running tests. #> ℹ Testing hubUtils #> ✔ | F W  S  OK | Context #> ✔ |          7 | as_config #> ✔ |          9 | as_model_out_tbl #> ✔ |          5 | check_deprecated_schema #> ✔ |         17 | model_id_merge #> ✔ |          7 | read_config [6.4s] #> ✔ |          7 | utils-get_hub #> ✔ |         16 | utils-model_out_tbl #> ✔ |         14 | utils-round_ids #> ✔ |          8 | utils-round-config #> ✔ |         39 | utils-schema-versions #> ✔ |         14 | utils-schema [1.2s] #> ✔ |          3 | utils-task_ids #> ✔ |          7 | v3-schema-utils #> #> ══ Results ════════════════════════════ #> Duration: 9.0 s #> #> [ FAIL 0 | WARN 0 | SKIP 0 | PASS 153 ] #> ✔ OK"},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"installing-the-git-hook","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas","what":"Installing the Git Hook","title":"Contributing to hubUtils","text":"optional, recommended use script pre-push hook schemas checked updates commit. create overwrite .git/hooks/pre-push. want uninstall git hook, remove .git/hooks/pre-push file addition checking schemas inst/schemas synchronized, demonstrated , hook also check: local hook --date inst/schemas folder contents committed install git hook, get message every successful push:","code":"usethis::use_git_hook(\"pre-push\", readLines(usethis::proj_path(\"data-raw/schemas.R\"))) $ git push #> #> ── pre-push: schema synchronization ─────────────────────────────────────── #> #> ── pre-push: checking that the hook is up-to-date ── #> #> ✔ Setting active project to \"/path/to/hubUtils\". #> ✔ OK #> #> ── pre-push: checking that schemas are up-to-date ── #> #> → branch: \"main\" #> → sha: \"0163a89cc38ba3846cd829545f6d65c1e40501a6\" #> → timestamp: \"2024-12-19T16:56:13Z\" #> ✔ OK #> #> ── pre-push: checking for changes in inst/schemas ── #> #> ✔ OK"},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"when-the-schema-updates","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas > Installing the Git Hook","what":"When the schema updates","title":"Contributing to hubUtils","text":"schemas updated committed, hook prevent pushing changes updated:","code":"$ git push #> [ ... snip ... ] #> #> ── ⚠ schema updated ── #> #> [ ... snip ... ] #> ✔ OK #> #> ── pre-push: checking for changes in inst/schemas ── #> #> Error in `check_status()`: #> ! New schemas must be committed before pushing. #> Backtrace: #>     ▆ #>  1. └─global check_status(usethis::proj_path()) #>  2.   └─cli::cli_abort(c(\"New schemas must be committed before pushing.\")) #>  3.     └─rlang::abort(...) #> Execution halted #> error: failed to push some refs to 'https://github.com/hubverse-org/hubUtils.git'"},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"when-the-script-changes","dir":"","previous_headings":"Synchronizing with hubverse-org/schemas > Installing the Git Hook","what":"When the script changes","title":"Contributing to hubUtils","text":"git hook script changes, given instructions update:","code":"$ git push #> #> ── pre-push: schema synchronization ─────────────────────────────────────── #> #> ── pre-push: checking that the hook is up-to-date ── #> #> ✔ Setting active project to \"/path/to/hubUtils\". #> Error in `check_hook()`: #> ! git hook outdated #> ℹ Use `usethis::use_git_hook(\"pre-push\", readLines(usethis::proj_path(\"data-raw/schemas.R\")))` #>   to update your hook. #> Backtrace: #>     ▆ #>  1. └─global check_hook(usethis::proj_path()) #>  2.   └─cli::cli_abort(c(\"git hook outdated\", i = \"Use {.code {cmd}} to update your hook.\")) #>  3.     └─rlang::abort(...) #> Execution halted #> error: failed to push some refs to 'https://github.com/hubverse-org/hubUtils.git'"},{"path":"https://hubverse-org.github.io/hubUtils/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to hubUtils","text":"Please note hubUtils project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Consortium Infectious Disease Modeling Hubs Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anna Krystalli. Author, maintainer. Li Shandross. Contributor. Nicholas G. Reich. Contributor. Evan L. Ray. Contributor. Zhian N. Kamvar. Contributor. Consortium Infectious Disease Modeling Hubs. Copyright holder.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Krystalli (2025). hubUtils: Core 'hubverse' Utilities. R package version 0.3.0.9000, https://hubverse-org.github.io/hubUtils/, https://github.com/hubverse-org/hubUtils.","code":"@Manual{,   title = {hubUtils: Core 'hubverse' Utilities},   author = {Anna Krystalli},   year = {2025},   note = {R package version 0.3.0.9000,     https://hubverse-org.github.io/hubUtils/},   url = {https://github.com/hubverse-org/hubUtils}, }"},{"path":"https://hubverse-org.github.io/hubUtils/dev/index.html","id":"hubutils-","dir":"","previous_headings":"","what":"Core hubverse Utilities","title":"Core hubverse Utilities","text":"goal hubUtils provide core set low-level utility functions common across hubverse. Functions used interact hubverse schema, hub config files model outputs designed primarily used internally hubverse packages.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Core hubverse Utilities","text":"can install released version hubUtils CRAN :","code":"install.packages(\"hubUtils\")"},{"path":"https://hubverse-org.github.io/hubUtils/dev/index.html","id":"latest","dir":"","previous_headings":"Installation","what":"Latest","title":"Core hubverse Utilities","text":"can install latest version hubUtils R-universe:","code":"install.packages(\"hubUtils\", repos = c(\"https://hubverse-org.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://hubverse-org.github.io/hubUtils/dev/index.html","id":"development","dir":"","previous_headings":"Installation","what":"Development","title":"Core hubverse Utilities","text":"want test new features yet released, can install development version hubUtils GitHub :","code":"remotes::install_github(\"hubverse-org/hubUtils\")"},{"path":"https://hubverse-org.github.io/hubUtils/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Core hubverse Utilities","text":"Please note hubUtils package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Core hubverse Utilities","text":"Interested contributing back open-source hubverse project? Learn get involved Hubverse Community contribute hubUtils package.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a config list to a config class object — as_config","title":"Coerce a config list to a config class object — as_config","text":"Coerce config list config class object","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a config list to a config class object — as_config","text":"","code":"as_config(x)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a config list to a config class object — as_config","text":"x list representation contents tasks.json config file.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce a config list to a config class object — as_config","text":"config list object subclass <config>.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce a config list to a config class object — as_config","text":"","code":"config_tasks <- read_config(   hub_path = system.file(\"testhubs/simple\", package = \"hubUtils\") ) # Remove all attributes except names to demonstrate functionality attributes(config_tasks) <- attributes(config_tasks)[   names(attributes(config_tasks)) == \"names\" ] # Convert to config object as_config(config_tasks) #> $schema_version #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v2.0.0/tasks-schema.json\" #>  #> $rounds #> $rounds[[1]] #> $rounds[[1]]$round_id_from_variable #> [1] TRUE #>  #> $rounds[[1]]$round_id #> [1] \"origin_date\" #>  #> $rounds[[1]]$model_tasks #> $rounds[[1]]$model_tasks[[1]] #> $rounds[[1]]$model_tasks[[1]]$task_ids #> $rounds[[1]]$model_tasks[[1]]$task_ids$origin_date #> $rounds[[1]]$model_tasks[[1]]$task_ids$origin_date$required #> NULL #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$origin_date$optional #> [1] \"2022-10-01\" \"2022-10-08\" #>  #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$target #> $rounds[[1]]$model_tasks[[1]]$task_ids$target$required #> [1] \"wk inc flu hosp\" #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$target$optional #> NULL #>  #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$horizon #> $rounds[[1]]$model_tasks[[1]]$task_ids$horizon$required #> [1] 1 #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$horizon$optional #> [1] 2 3 4 #>  #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$location #> $rounds[[1]]$model_tasks[[1]]$task_ids$location$required #> NULL #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$location$optional #>  [1] \"US\" \"01\" \"02\" \"04\" \"05\" \"06\" \"08\" \"09\" \"10\" \"11\" \"12\" \"13\" \"15\" \"16\" \"17\" #> [16] \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" \"31\" \"32\" #> [31] \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"44\" \"45\" \"46\" \"47\" \"48\" #> [46] \"49\" \"50\" \"51\" \"53\" \"54\" \"55\" \"56\" \"72\" \"78\" #>  #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type #> $rounds[[1]]$model_tasks[[1]]$output_type$mean #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$output_type_id #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$output_type_id$required #> NULL #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$output_type_id$optional #> [1] NA #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$value #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$value$type #> [1] \"integer\" #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$value$minimum #> [1] 0 #>  #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$output_type_id #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$output_type_id$required #>  [1] 0.010 0.025 0.050 0.100 0.150 0.200 0.250 0.300 0.350 0.400 0.450 0.500 #> [13] 0.550 0.600 0.650 0.700 0.750 0.800 0.850 0.900 0.950 0.975 0.990 #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$output_type_id$optional #> NULL #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$value #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$value$type #> [1] \"integer\" #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$value$minimum #> [1] 0 #>  #>  #>  #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]] #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_id #> [1] \"wk inc flu hosp\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_name #> [1] \"Weekly incident influenza hospitalizations\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_units #> [1] \"count\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_keys #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_keys$target #> [1] \"wk inc flu hosp\" #>  #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_type #> [1] \"continuous\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$is_step_ahead #> [1] TRUE #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$time_unit #> [1] \"week\" #>  #>  #>  #>  #>  #> $rounds[[1]]$submissions_due #> $rounds[[1]]$submissions_due$relative_to #> [1] \"origin_date\" #>  #> $rounds[[1]]$submissions_due$start #> [1] -6 #>  #> $rounds[[1]]$submissions_due$end #> [1] 1 #>  #>  #>  #> $rounds[[2]] #> $rounds[[2]]$round_id_from_variable #> [1] TRUE #>  #> $rounds[[2]]$round_id #> [1] \"origin_date\" #>  #> $rounds[[2]]$model_tasks #> $rounds[[2]]$model_tasks[[1]] #> $rounds[[2]]$model_tasks[[1]]$task_ids #> $rounds[[2]]$model_tasks[[1]]$task_ids$origin_date #> $rounds[[2]]$model_tasks[[1]]$task_ids$origin_date$required #> NULL #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$origin_date$optional #> [1] \"2022-10-15\" \"2022-10-22\" \"2022-10-29\" #>  #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$target #> $rounds[[2]]$model_tasks[[1]]$task_ids$target$required #> [1] \"wk inc flu hosp\" #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$target$optional #> NULL #>  #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$horizon #> $rounds[[2]]$model_tasks[[1]]$task_ids$horizon$required #> [1] 1 #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$horizon$optional #> [1] 2 3 4 #>  #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$location #> $rounds[[2]]$model_tasks[[1]]$task_ids$location$required #> NULL #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$location$optional #>  [1] \"US\" \"01\" \"02\" \"04\" \"05\" \"06\" \"08\" \"09\" \"10\" \"11\" \"12\" \"13\" \"15\" \"16\" \"17\" #> [16] \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" \"31\" \"32\" #> [31] \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"44\" \"45\" \"46\" \"47\" \"48\" #> [46] \"49\" \"50\" \"51\" \"53\" \"54\" \"55\" \"56\" \"72\" \"78\" #>  #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$age_group #> $rounds[[2]]$model_tasks[[1]]$task_ids$age_group$required #> [1] \"65+\" #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$age_group$optional #> [1] \"0-5\"   \"6-18\"  \"19-24\" \"25-64\" #>  #>  #>  #> $rounds[[2]]$model_tasks[[1]]$output_type #> $rounds[[2]]$model_tasks[[1]]$output_type$mean #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$output_type_id #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$output_type_id$required #> NULL #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$output_type_id$optional #> [1] NA #>  #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$value #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$value$type #> [1] \"integer\" #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$value$minimum #> [1] 0 #>  #>  #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$output_type_id #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$output_type_id$required #>  [1] 0.010 0.025 0.050 0.100 0.150 0.200 0.250 0.300 0.350 0.400 0.450 0.500 #> [13] 0.550 0.600 0.650 0.700 0.750 0.800 0.850 0.900 0.950 0.975 0.990 #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$output_type_id$optional #> NULL #>  #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$value #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$value$type #> [1] \"integer\" #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$value$minimum #> [1] 0 #>  #>  #>  #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]] #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_id #> [1] \"wk inc flu hosp\" #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_name #> [1] \"Weekly incident influenza hospitalizations\" #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_units #> [1] \"count\" #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_keys #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_keys$target #> [1] \"wk inc flu hosp\" #>  #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_type #> [1] \"continuous\" #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$is_step_ahead #> [1] TRUE #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$time_unit #> [1] \"week\" #>  #>  #>  #>  #>  #> $rounds[[2]]$submissions_due #> $rounds[[2]]$submissions_due$relative_to #> [1] \"origin_date\" #>  #> $rounds[[2]]$submissions_due$start #> [1] -6 #>  #> $rounds[[2]]$submissions_due$end #> [1] 1 #>  #>  #>  #>  #> attr(,\"schema_id\") #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v2.0.0/tasks-schema.json\" #> attr(,\"type\") #> [1] \"tasks\" #> attr(,\"class\") #> [1] \"config\" \"list\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_model_out_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert model output to a model_out_tbl class object. — as_model_out_tbl","title":"Convert model output to a model_out_tbl class object. — as_model_out_tbl","text":"Convert model output model_out_tbl class object.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_model_out_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert model output to a model_out_tbl class object. — as_model_out_tbl","text":"","code":"as_model_out_tbl(   tbl,   model_id_col = NULL,   output_type_col = NULL,   output_type_id_col = NULL,   value_col = NULL,   sep = \"-\",   trim_to_task_ids = FALSE,   hub_con = NULL,   task_id_cols = NULL,   remove_empty = FALSE )"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_model_out_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert model output to a model_out_tbl class object. — as_model_out_tbl","text":"tbl data.frame tibble model output data returned query <hub_connection> object. model_id_col character string. model_id column already exist tbl, tbl column name containing model_id data. Alternatively, team_abbr model_abbr column exist, merged automatically create single model_id column. output_type_col character string. output_type column already exist tbl, tbl column name containing output_type data. output_type_id_col character string. output_type_id column already exist tbl, tbl column name containing output_type_id data. value_col character string. value column already exist tbl, tbl column name containing value data. sep character string. Character used separator concatenating team_abbr model_abbr column values single model_id string. applicable model_id column present team_abbr model_abbr columns . trim_to_task_ids logical. Whether trim tbl task ID columns . Task ID columns can specified providing <hub_connection> class object hub_con manually task_id_cols. hub_con <hub_connection> class object. used trim_to_task_ids = TRUE tasks IDs determined hub config. task_id_cols character vector column names. used trim_to_task_ids = TRUE manually specify task ID columns retain. Overrides hub_con argument provided. remove_empty Logical. Whether remove columns containing NA.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_model_out_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert model output to a model_out_tbl class object. — as_model_out_tbl","text":"model_out_tbl class object.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/as_model_out_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert model output to a model_out_tbl class object. — as_model_out_tbl","text":"","code":"as_model_out_tbl(hub_con_output) #> # A tibble: 92 × 8 #>    model_id     forecast_date horizon target location output_type output_type_id #>  * <chr>        <date>          <int> <chr>  <chr>    <chr>       <chr>          #>  1 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.01           #>  2 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.025          #>  3 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.05           #>  4 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.1            #>  5 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.15           #>  6 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.2            #>  7 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.25           #>  8 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.3            #>  9 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.35           #> 10 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.4            #> # ℹ 82 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/check_deprecated_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a config file is using a deprecated schema — check_deprecated_schema","title":"Check whether a config file is using a deprecated schema — check_deprecated_schema","text":"Function compares current schema version config file valid version, config file version deprecated compared valid version, function issues lifecycle warning prompt user upgrade.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/check_deprecated_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a config file is using a deprecated schema — check_deprecated_schema","text":"","code":"check_deprecated_schema(   config_version,   config,   valid_version = \"v2.0.0\",   hubutils_version = \"0.0.0.9010\" )"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/check_deprecated_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a config file is using a deprecated schema — check_deprecated_schema","text":"config_version Character string schema version. config List representation config file. valid_version Character string minimum valid schema version. hubutils_version version hubUtils package deprecation schema version valid_version introduced.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/check_deprecated_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a config file is using a deprecated schema — check_deprecated_schema","text":"Invisibly, TRUE schema version deprecated, FALSE otherwise. Primarily used side effect issuing lifecycle warning.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/extract_schema_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the schema version from a schema id or config schema_version property character string — extract_schema_version","title":"Extract the schema version from a schema id or config schema_version property character string — extract_schema_version","text":"Extract schema version schema id config schema_version property character string","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/extract_schema_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the schema version from a schema id or config schema_version property character string — extract_schema_version","text":"","code":"extract_schema_version(id)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/extract_schema_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the schema version from a schema id or config schema_version property character string — extract_schema_version","text":"id schema id config schema_version property character string.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/extract_schema_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the schema version from a schema id or config schema_version property character string — extract_schema_version","text":"schema version number character string.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/extract_schema_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the schema version from a schema id or config schema_version property character string — extract_schema_version","text":"","code":"extract_schema_version(\"schema_version: v3.0.0\") #> [1] \"v3.0.0\" extract_schema_version(\"refs/heads/main/v3.0.0\") #> [1] \"v3.0.0\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_config_tid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of the output type id column based on the schema version — get_config_tid","title":"Get the name of the output type id column based on the schema version — get_config_tid","text":"Version can provided either directly config_version argument extracted config_tasks object.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_config_tid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of the output type id column based on the schema version — get_config_tid","text":"","code":"get_config_tid(config_version, config_tasks)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_config_tid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of the output type id column based on the schema version — get_config_tid","text":"config_version Character string schema version. config_tasks list version content's hub's tasks.json config file, accessed \"config_tasks\" attribute <hub_connection> object function read_config().","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_config_tid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of the output type id column based on the schema version — get_config_tid","text":"character string name output type id column","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_config_tid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the name of the output type id column based on the schema version — get_config_tid","text":"","code":"get_config_tid(\"v3.0.0\") #> [1] \"output_type_id\" get_config_tid(\"v2.0.0\") #> [1] \"output_type_id\" # this will produce a warning because support for schema version 1.0.0 # has been dropped. get_config_tid(\"v1.0.0\") #> Warning: Hub configured using schema version v1.0.0. Support for schema earlier than #> v2.0.0 was deprecated in hubUtils 0.0.0.9010. #> ℹ Please upgrade Hub config files to conform to, at minimum, version v2.0.0 as #>   soon as possible. #> [1] \"type_id\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_hub_timezone.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hub configuration fields — get_hub_timezone","title":"Get hub configuration fields — get_hub_timezone","text":"Get hub configuration fields","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_hub_timezone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hub configuration fields — get_hub_timezone","text":"","code":"get_hub_timezone(hub_path)  get_hub_model_output_dir(hub_path)  get_hub_file_formats(hub_path, round_id = NULL)  get_hub_derived_task_ids(hub_path, round_id = NULL)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_hub_timezone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get hub configuration fields — get_hub_timezone","text":"hub_path Either character string path local Modeling Hub directory object class <SubTreeFileSystem> created using functions arrow::s3_bucket() arrow::gs_bucket() providing string S3 GCS bucket name path Modeling Hub directory stored cloud. details consult Using cloud storage (S3, GCS) arrow package. round_id Character string. Round identifier. round set round_id_from_variable: true, IDs values task ID defined round's round_id property config_tasks. Otherwise match round's round_id value config. Ignored hub contains single round.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_hub_timezone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get hub configuration fields — get_hub_timezone","text":"get_hub_timezone: timezone hub get_hub_model_output_dir: model output directory name get_hub_file_formats: character vector accepted hub round level file formats. round_id NULL round round level file_format setting, returns hub level file_format setting. get_hub_derived_task_ids: character vector hub round level derived task ID names. round_id NULL round round level derived_tasks_ids setting, returns hub level derived_tasks_ids setting.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_hub_timezone.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get hub configuration fields — get_hub_timezone","text":"get_hub_timezone(): Get hub timezone get_hub_model_output_dir(): Get model output directory name get_hub_file_formats(): Get hub round level file formats get_hub_derived_task_ids(): Get hub round level derived_tasks_ids","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_hub_timezone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get hub configuration fields — get_hub_timezone","text":"","code":"hub_path <- system.file(\"testhubs\", \"flusight\", package = \"hubUtils\") get_hub_timezone(hub_path) #> [1] \"US/Eastern\" get_hub_model_output_dir(hub_path) #> [1] \"forecasts\" get_hub_file_formats(hub_path) #> [1] \"csv\"     \"parquet\" \"arrow\"   get_hub_file_formats(hub_path, \"2022-12-12\") #> [1] \"csv\"     \"parquet\" \"arrow\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities for accessing round ID metadata — get_round_idx","title":"Utilities for accessing round ID metadata — get_round_idx","text":"Utilities accessing round ID metadata","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities for accessing round ID metadata — get_round_idx","text":"","code":"get_round_idx(config_tasks, round_id)  get_round_ids(   config_tasks,   flatten = c(\"all\", \"model_task\", \"task_id\", \"none\") )"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities for accessing round ID metadata — get_round_idx","text":"config_tasks list version content's hub's tasks.json config file, accessed \"config_tasks\" attribute <hub_connection> object function read_config(). round_id Character string. Round identifier. round set round_id_from_variable: true, IDs values task ID defined round's round_id property config_tasks. Otherwise match round's round_id value config. Ignored hub contains single round. flatten Character. Whether much flatten output. \"\": Complete flattening. Returns character vector unique round IDs across rounds. \"model_task\": Flatten model tasks. Returns list element round. round element contains character vector unique round IDs across round model tasks. applicable round_id_from_variable TRUE. \"task_id\": Flatten task ID. Returns nested list element round. round element contains list element model task. model task element contains character vector unique round IDs. across required optional properties. applicable round_id_from_variable TRUE \"none\": flattening. round_id_from_variable TRUE, returns nested list element round. round element contains nested element model task. model task element contains nested list required optional character vectors round IDs. round_id_from_variable FALSE,list round ID round returned.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_idx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utilities for accessing round ID metadata — get_round_idx","text":"integer index element config_tasks$rounds character round identifier maps list character vector hub round IDs character vector returned flatten = \"\" list returned otherwise (see flatten details)","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_idx.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Utilities for accessing round ID metadata — get_round_idx","text":"get_round_idx(): Get integer index element config_tasks$rounds character round identifier maps . get_round_ids(): Get list character vector hub round IDs. round, round_id_from_variable TRUE, round IDs returned values task ID defined round_id property. Otherwise, round_id_from_variable FALSE, value round_id property returned.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_idx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilities for accessing round ID metadata — get_round_idx","text":"","code":"config_tasks <- read_config(   hub_path = system.file(\"testhubs/simple\", package = \"hubUtils\") ) # Get round IDs get_round_ids(config_tasks) #> [1] \"2022-10-01\" \"2022-10-08\" \"2022-10-15\" \"2022-10-22\" \"2022-10-29\" get_round_ids(config_tasks, flatten = \"model_task\") #> [[1]] #> [1] \"2022-10-01\" \"2022-10-08\" #>  #> [[2]] #> [1] \"2022-10-15\" \"2022-10-22\" \"2022-10-29\" #>  get_round_ids(config_tasks, flatten = \"task_id\") #> [[1]] #> [[1]][[1]] #> [1] \"2022-10-01\" \"2022-10-08\" #>  #>  #> [[2]] #> [[2]][[1]] #> [1] \"2022-10-15\" \"2022-10-22\" \"2022-10-29\" #>  #>  get_round_ids(config_tasks, flatten = \"none\") #> [[1]] #> [[1]][[1]] #> [[1]][[1]]$required #> NULL #>  #> [[1]][[1]]$optional #> [1] \"2022-10-01\" \"2022-10-08\" #>  #>  #>  #> [[2]] #> [[2]][[1]] #> [[2]][[1]]$required #> NULL #>  #> [[2]][[1]]$optional #> [1] \"2022-10-15\" \"2022-10-22\" \"2022-10-29\" #>  #>  #>  # Get round integer index using a round_id get_round_idx(config_tasks, \"2022-10-01\") #> [1] 1 get_round_idx(config_tasks, \"2022-10-29\") #> [1] 2"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_model_tasks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the model tasks for a given round — get_round_model_tasks","title":"Get the model tasks for a given round — get_round_model_tasks","text":"Get model tasks given round","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_model_tasks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the model tasks for a given round — get_round_model_tasks","text":"","code":"get_round_model_tasks(config_tasks, round_id)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_model_tasks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the model tasks for a given round — get_round_model_tasks","text":"config_tasks list version content's hub's tasks.json config file, accessed \"config_tasks\" attribute <hub_connection> object function read_config(). round_id Character string. Round identifier. round set round_id_from_variable: true, IDs values task ID defined round's round_id property config_tasks. Otherwise match round's round_id value config. Ignored hub contains single round.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_model_tasks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the model tasks for a given round — get_round_model_tasks","text":"list representation model tasks given round.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_model_tasks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the model tasks for a given round — get_round_model_tasks","text":"","code":"hub_path <- system.file(\"testhubs/simple\", package = \"hubUtils\") config_tasks <- read_config(hub_path, \"tasks\") get_round_model_tasks(config_tasks, round_id = \"2022-10-08\") #> [[1]] #> [[1]]$task_ids #> [[1]]$task_ids$origin_date #> [[1]]$task_ids$origin_date$required #> NULL #>  #> [[1]]$task_ids$origin_date$optional #> [1] \"2022-10-01\" \"2022-10-08\" #>  #>  #> [[1]]$task_ids$target #> [[1]]$task_ids$target$required #> [1] \"wk inc flu hosp\" #>  #> [[1]]$task_ids$target$optional #> NULL #>  #>  #> [[1]]$task_ids$horizon #> [[1]]$task_ids$horizon$required #> [1] 1 #>  #> [[1]]$task_ids$horizon$optional #> [1] 2 3 4 #>  #>  #> [[1]]$task_ids$location #> [[1]]$task_ids$location$required #> NULL #>  #> [[1]]$task_ids$location$optional #>  [1] \"US\" \"01\" \"02\" \"04\" \"05\" \"06\" \"08\" \"09\" \"10\" \"11\" \"12\" \"13\" \"15\" \"16\" \"17\" #> [16] \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" \"31\" \"32\" #> [31] \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"44\" \"45\" \"46\" \"47\" \"48\" #> [46] \"49\" \"50\" \"51\" \"53\" \"54\" \"55\" \"56\" \"72\" \"78\" #>  #>  #>  #> [[1]]$output_type #> [[1]]$output_type$mean #> [[1]]$output_type$mean$output_type_id #> [[1]]$output_type$mean$output_type_id$required #> NULL #>  #> [[1]]$output_type$mean$output_type_id$optional #> [1] NA #>  #>  #> [[1]]$output_type$mean$value #> [[1]]$output_type$mean$value$type #> [1] \"integer\" #>  #> [[1]]$output_type$mean$value$minimum #> [1] 0 #>  #>  #>  #> [[1]]$output_type$quantile #> [[1]]$output_type$quantile$output_type_id #> [[1]]$output_type$quantile$output_type_id$required #>  [1] 0.010 0.025 0.050 0.100 0.150 0.200 0.250 0.300 0.350 0.400 0.450 0.500 #> [13] 0.550 0.600 0.650 0.700 0.750 0.800 0.850 0.900 0.950 0.975 0.990 #>  #> [[1]]$output_type$quantile$output_type_id$optional #> NULL #>  #>  #> [[1]]$output_type$quantile$value #> [[1]]$output_type$quantile$value$type #> [1] \"integer\" #>  #> [[1]]$output_type$quantile$value$minimum #> [1] 0 #>  #>  #>  #>  #> [[1]]$target_metadata #> [[1]]$target_metadata[[1]] #> [[1]]$target_metadata[[1]]$target_id #> [1] \"wk inc flu hosp\" #>  #> [[1]]$target_metadata[[1]]$target_name #> [1] \"Weekly incident influenza hospitalizations\" #>  #> [[1]]$target_metadata[[1]]$target_units #> [1] \"count\" #>  #> [[1]]$target_metadata[[1]]$target_keys #> [[1]]$target_metadata[[1]]$target_keys$target #> [1] \"wk inc flu hosp\" #>  #>  #> [[1]]$target_metadata[[1]]$target_type #> [1] \"continuous\" #>  #> [[1]]$target_metadata[[1]]$is_step_ahead #> [1] TRUE #>  #> [[1]]$target_metadata[[1]]$time_unit #> [1] \"week\" #>  #>  #>  #>  get_round_model_tasks(config_tasks, round_id = \"2022-10-15\") #> [[1]] #> [[1]]$task_ids #> [[1]]$task_ids$origin_date #> [[1]]$task_ids$origin_date$required #> NULL #>  #> [[1]]$task_ids$origin_date$optional #> [1] \"2022-10-15\" \"2022-10-22\" \"2022-10-29\" #>  #>  #> [[1]]$task_ids$target #> [[1]]$task_ids$target$required #> [1] \"wk inc flu hosp\" #>  #> [[1]]$task_ids$target$optional #> NULL #>  #>  #> [[1]]$task_ids$horizon #> [[1]]$task_ids$horizon$required #> [1] 1 #>  #> [[1]]$task_ids$horizon$optional #> [1] 2 3 4 #>  #>  #> [[1]]$task_ids$location #> [[1]]$task_ids$location$required #> NULL #>  #> [[1]]$task_ids$location$optional #>  [1] \"US\" \"01\" \"02\" \"04\" \"05\" \"06\" \"08\" \"09\" \"10\" \"11\" \"12\" \"13\" \"15\" \"16\" \"17\" #> [16] \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" \"31\" \"32\" #> [31] \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"44\" \"45\" \"46\" \"47\" \"48\" #> [46] \"49\" \"50\" \"51\" \"53\" \"54\" \"55\" \"56\" \"72\" \"78\" #>  #>  #> [[1]]$task_ids$age_group #> [[1]]$task_ids$age_group$required #> [1] \"65+\" #>  #> [[1]]$task_ids$age_group$optional #> [1] \"0-5\"   \"6-18\"  \"19-24\" \"25-64\" #>  #>  #>  #> [[1]]$output_type #> [[1]]$output_type$mean #> [[1]]$output_type$mean$output_type_id #> [[1]]$output_type$mean$output_type_id$required #> NULL #>  #> [[1]]$output_type$mean$output_type_id$optional #> [1] NA #>  #>  #> [[1]]$output_type$mean$value #> [[1]]$output_type$mean$value$type #> [1] \"integer\" #>  #> [[1]]$output_type$mean$value$minimum #> [1] 0 #>  #>  #>  #> [[1]]$output_type$quantile #> [[1]]$output_type$quantile$output_type_id #> [[1]]$output_type$quantile$output_type_id$required #>  [1] 0.010 0.025 0.050 0.100 0.150 0.200 0.250 0.300 0.350 0.400 0.450 0.500 #> [13] 0.550 0.600 0.650 0.700 0.750 0.800 0.850 0.900 0.950 0.975 0.990 #>  #> [[1]]$output_type$quantile$output_type_id$optional #> NULL #>  #>  #> [[1]]$output_type$quantile$value #> [[1]]$output_type$quantile$value$type #> [1] \"integer\" #>  #> [[1]]$output_type$quantile$value$minimum #> [1] 0 #>  #>  #>  #>  #> [[1]]$target_metadata #> [[1]]$target_metadata[[1]] #> [[1]]$target_metadata[[1]]$target_id #> [1] \"wk inc flu hosp\" #>  #> [[1]]$target_metadata[[1]]$target_name #> [1] \"Weekly incident influenza hospitalizations\" #>  #> [[1]]$target_metadata[[1]]$target_units #> [1] \"count\" #>  #> [[1]]$target_metadata[[1]]$target_keys #> [[1]]$target_metadata[[1]]$target_keys$target #> [1] \"wk inc flu hosp\" #>  #>  #> [[1]]$target_metadata[[1]]$target_type #> [1] \"continuous\" #>  #> [[1]]$target_metadata[[1]]$is_step_ahead #> [1] TRUE #>  #> [[1]]$target_metadata[[1]]$time_unit #> [1] \"week\" #>  #>  #>  #>"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_task_id_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get task ID names for a given round — get_round_task_id_names","title":"Get task ID names for a given round — get_round_task_id_names","text":"Get task ID names given round","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_task_id_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get task ID names for a given round — get_round_task_id_names","text":"","code":"get_round_task_id_names(config_tasks, round_id)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_task_id_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get task ID names for a given round — get_round_task_id_names","text":"config_tasks list version content's hub's tasks.json config file, accessed \"config_tasks\" attribute <hub_connection> object function read_config(). round_id Character string. Round identifier. round set round_id_from_variable: true, IDs values task ID defined round's round_id property config_tasks. Otherwise match round's round_id value config. Ignored hub contains single round.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_task_id_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get task ID names for a given round — get_round_task_id_names","text":"character vector task ID names","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_round_task_id_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get task ID names for a given round — get_round_task_id_names","text":"","code":"hub_path <- system.file(\"testhubs/simple\", package = \"hubUtils\") config_tasks <- read_config(hub_path, \"tasks\") get_round_task_id_names(config_tasks, round_id = \"2022-10-08\") #> [1] \"origin_date\" \"target\"      \"horizon\"     \"location\"    get_round_task_id_names(config_tasks, round_id = \"2022-10-15\") #> [1] \"origin_date\" \"target\"      \"horizon\"     \"location\"    \"age_group\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a schema — get_schema","title":"Download a schema — get_schema","text":"Download schema","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a schema — get_schema","text":"","code":"get_schema(schema_url)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a schema — get_schema","text":"schema_url download URL given config schema version.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a schema — get_schema","text":"Contents JSON schema character string.","code":""},{"path":[]},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a schema — get_schema","text":"","code":"schema_url <- get_schema_url(config = \"tasks\", version = \"v0.0.0.9\") get_schema(schema_url) #> { #>     \"$schema\": \"https://json-schema.org/draft/2020-12/schema\", #>     \"$id\": \"https://github.com/hubverse-org/schemas/blob/main/v0.0.0.9/tasks-schema.json\", #>     \"title\": \"Hub model task definitions\", #>     \"type\": \"object\", #>     \"properties\": { #>         \"schema_version\": { #>             \"type\": \"string\", #>             \"format\": \"uri\" #>         }, #>         \"rounds\": { #>             \"description\": \"Array of modeling round properties\", #>             \"type\": \"array\", #>             \"items\": { #>                 \"type\": \"object\", #>                 \"description\": \"Individual modeling round properties\", #>                 \"properties\": { #>                     \"round_id_from_variable\": { #>                         \"description\": \"Whether the round identifier is encoded by a task id variable in the data.\", #>                         \"type\": \"boolean\" #>                     }, #>                     \"round_id\": { #>                         \"description\": \"Round identifier. If round_id_from_variable = true, round_id should be the name of a task id variable present in all sets of modeling task specifications\", #>                         \"examples\": [ #>                             \"round-1\", #>                             \"2022-11-05\", #>                             \"origin_date\" #>                         ], #>                         \"type\": \"string\" #>                     }, #>                     \"round_name\": { #>                         \"description\": \"An optional round name. This can be useful for internal referencing of rounds, for examples, when a date is used as round_id but hub maintainers and teams also refer to rounds as round-1, round-2 etc.\", #>                         \"examples\": [ #>                             \"round-1\" #>                         ], #>                         \"type\": \"string\" #>                     }, #>                     \"model_tasks\": { #>                         \"type\": \"array\", #>                         \"description\": \"Array defining round-specific modeling tasks. Can contain one or more groups of modeling tasks per round where each group is defined by a distinct combination of values of task id variables.\", #>                         \"items\": { #>                             \"type\": \"object\", #>                             \"properties\": { #>                                 \"task_ids\": { #>                                     \"description\": \"Group of valid values of task id variables. A set of valid tasks corresponding to this group is formed by taking all combinations of these values.\", #>                                     \"type\": \"object\", #>                                     \"properties\": { #>                                         \"origin_date\": { #>                                             \"description\": \"An object containing arrays of required and optional unique origin dates. Origin date defines the starting point that can be used for calculating a target_date via the formula target_date = origin_date + horizon * time_units_per_horizon (e.g., with weekly data, target_date is calculated as origin_date + horizon * 7 days)\", #>                                             \"examples\": [ #>                                                 { #>                                                     \"required\": null, #>                                                     \"optional\": [ #>                                                         \"2022-11-05\", #>                                                         \"2022-11-12\", #>                                                         \"2022-11-19\" #>                                                     ] #>                                                 } #>                                             ], #>                                             \"type\": \"object\", #>                                             \"properties\": { #>                                                 \"required\": { #>                                                     \"description\": \"Array of origin date unique identifiers that must be present for submission to be valid. Can be null if no origin dates are required and all valid origin dates are specified in the optional property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\", #>                                                         \"format\": \"date\" #>                                                     } #>                                                 }, #>                                                 \"optional\": { #>                                                     \"description\": \"Array of valid but not required unique origin date identifiers. Can be null if all origin dates are required and are specified in the required property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\", #>                                                         \"format\": \"date\" #>                                                     } #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"required\", #>                                                 \"optional\" #>                                             ] #>                                         }, #>                                         \"scenario_id\": { #>                                             \"description\": \"An object containing arrays of required and optional unique identifiers of each valid scenario.\", #>                                             \"examples\": [ #>                                                 { #>                                                     \"required\": null, #>                                                     \"optional\": [ #>                                                         1, #>                                                         2, #>                                                         3, #>                                                         4 #>                                                     ] #>                                                 }, #>                                                 { #>                                                     \"required\": null, #>                                                     \"optional\": [ #>                                                         \"A-2021-03-28\", #>                                                         \"B-2021-03-28\", #>                                                         \"A-2021-04-05\", #>                                                         \"B-2021-04-05\" #>                                                     ] #>                                                 } #>                                             ], #>                                             \"type\": \"object\", #>                                             \"properties\": { #>                                                 \"required\": { #>                                                     \"description\": \"Array of identifiers of scenarios that must be present in a valid submission. Can be null if no scenario ids are required and all valid ids are specified in the optional property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": [ #>                                                             \"integer\", #>                                                             \"string\" #>                                                         ] #>                                                     } #>                                                 }, #>                                                 \"optional\": { #>                                                     \"description\": \"Array of identifiers of valid but not required scenarios. Can be null if all scenarios are required and are specified in the required property.\", #>                                                     \"type\": [ #>                                                         \"null\", #>                                                         \"array\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": [ #>                                                             \"integer\", #>                                                             \"string\" #>                                                         ] #>                                                     } #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"required\", #>                                                 \"optional\" #>                                             ] #>                                         }, #>                                         \"location\": { #>                                             \"description\": \"An object containing arrays of required and optional unique identifiers for each valid location, e.g. country codes, FIPS state or county level code etc.\", #>                                             \"examples\": [ #>                                                 { #>                                                     \"required\": \"US\", #>                                                     \"optional\": [ #>                                                         \"01\", #>                                                         \"02\", #>                                                         \"04\", #>                                                         \"05\", #>                                                         \"06\", #>                                                         \"08\", #>                                                         \"09\", #>                                                         \"10\", #>                                                         \"11\", #>                                                         \"12\", #>                                                         \"13\", #>                                                         \"15\", #>                                                         \"16\", #>                                                         \"17\", #>                                                         \"18\", #>                                                         \"19\", #>                                                         \"20\", #>                                                         \"21\", #>                                                         \"22\", #>                                                         \"23\", #>                                                         \"24\", #>                                                         \"25\", #>                                                         \"26\", #>                                                         \"27\", #>                                                         \"28\", #>                                                         \"29\", #>                                                         \"30\", #>                                                         \"31\", #>                                                         \"32\", #>                                                         \"33\", #>                                                         \"34\", #>                                                         \"35\", #>                                                         \"36\", #>                                                         \"37\", #>                                                         \"38\", #>                                                         \"39\", #>                                                         \"40\", #>                                                         \"41\", #>                                                         \"42\", #>                                                         \"44\", #>                                                         \"45\", #>                                                         \"46\", #>                                                         \"47\", #>                                                         \"48\", #>                                                         \"49\", #>                                                         \"50\", #>                                                         \"51\", #>                                                         \"53\", #>                                                         \"54\", #>                                                         \"55\", #>                                                         \"56\" #>                                                     ] #>                                                 } #>                                             ], #>                                             \"type\": \"object\", #>                                             \"properties\": { #>                                                 \"required\": { #>                                                     \"description\": \"Array of location unique identifiers that must be present for submission to be valid. Can be null if no locations are required and all valid locations are specified in the optional property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\" #>                                                     } #>                                                 }, #>                                                 \"optional\": { #>                                                     \"description\": \"Array of valid but not required unique location identifiers. Can be null if all locations are required and are specified in the required property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\" #>                                                     } #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"required\", #>                                                 \"optional\" #>                                             ] #>                                         }, #>                                         \"target\": { #>                                             \"description\": \"An object containing arrays of required and optional unique identifiers for each valid target.\", #>                                             \"type\": \"object\", #>                                             \"examples\": [ #>                                                 { #>                                                     \"required\": null, #>                                                     \"optional\": [ #>                                                         \"weekly rate\" #>                                                     ] #>                                                 } #>                                             ], #>                                             \"properties\": { #>                                                 \"required\": { #>                                                     \"description\": \"Array of target unique identifiers that must be present for submission to be valid. Can be null if no targets are required and all valid targets are specified in the optional property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\" #>                                                     } #>                                                 }, #>                                                 \"optional\": { #>                                                     \"description\": \"Array of valid but not required unique target identifiers. Can be null if all targets are required and are specified in the required property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\" #>                                                     } #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"required\", #>                                                 \"optional\" #>                                             ] #>                                         }, #>                                         \"target_date\": { #>                                             \"description\": \"An object containing arrays of required and optional unique target dates. For short-term forecasts, the target_date specifies the date of occurrence of the outcome of interest. For instance, if models are requested to forecast the number of hospitalizations that will occur on 2022-07-15, the target_date is 2022-07-15\", #>                                             \"examples\": [ #>                                                 { #>                                                     \"required\": null, #>                                                     \"optional\": [ #>                                                         \"2022-11-12\", #>                                                         \"2022-11-19\", #>                                                         \"2022-11-26\" #>                                                     ] #>                                                 } #>                                             ], #>                                             \"type\": \"object\", #>                                             \"properties\": { #>                                                 \"required\": { #>                                                     \"description\": \"Array of target date unique identifiers that must be present for submission to be valid. Can be null if no target dates are required and all valid target dates are specified in the optional property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\", #>                                                         \"format\": \"date\" #>                                                     } #>                                                 }, #>                                                 \"optional\": { #>                                                     \"description\": \"Array of valid but not required unique target date identifiers. Can be null if all target dates are required and are specified in the required property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\", #>                                                         \"format\": \"date\" #>                                                     } #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"required\", #>                                                 \"optional\" #>                                             ] #>                                         }, #>                                         \"horizon\": { #>                                             \"description\": \"An object containing arrays of required and optional unique horizons. Horizons define the difference between the target_date and the origin_date in time units specified by the hub (e.g., may be days, weeks, or months)\", #>                                             \"examples\": [ #>                                                 { #>                                                     \"required\": null, #>                                                     \"optional\": [ #>                                                         1, #>                                                         2, #>                                                         3, #>                                                         4 #>                                                     ] #>                                                 } #>                                             ], #>                                             \"type\": \"object\", #>                                             \"properties\": { #>                                                 \"required\": { #>                                                     \"description\": \"Array of horizon unique identifiers that must be present for submission to be valid. Can be null if no horizons are required and all valid horizons are specified in the optional property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": [ #>                                                             \"integer\", #>                                                             \"string\" #>                                                         ] #>                                                     } #>                                                 }, #>                                                 \"optional\": { #>                                                     \"description\": \"Array of valid but not required unique horizon identifiers. Can be null if all horizons are required and are specified in the required property.\", #>                                                     \"type\": [ #>                                                         \"null\", #>                                                         \"array\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": [ #>                                                             \"integer\", #>                                                             \"string\" #>                                                         ] #>                                                     } #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"required\", #>                                                 \"optional\" #>                                             ] #>                                         }, #>                                         \"age_group\": { #>                                             \"type\": \"object\", #>                                             \"description\": \"An object containing arrays of required and optional unique identifiers for age groups\", #>                                             \"examples\": [ #>                                                 { #>                                                     \"required\": [ #>                                                         \"0-5\", #>                                                         \"6-18\", #>                                                         \"19-24\", #>                                                         \"25-64\", #>                                                         \"65+\" #>                                                     ], #>                                                     \"optional\": null #>                                                 } #>                                             ], #>                                             \"properties\": { #>                                                 \"required\": { #>                                                     \"description\": \"Array of age group unique identifiers that must be present for submission to be valid. Can be null if no age groups are required and all valid age groups are specified in the optional property.\", #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\" #>                                                     } #>                                                 }, #>                                                 \"optional\": { #>                                                     \"type\": [ #>                                                         \"array\", #>                                                         \"null\" #>                                                     ], #>                                                     \"items\": { #>                                                         \"type\": \"string\" #>                                                     } #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"required\", #>                                                 \"optional\" #>                                             ] #>                                         } #>                                     }, #>                                     \"additionalProperties\": true #>                                 }, #>                                 \"output_type\": { #>                                     \"type\": \"object\", #>                                     \"description\": \"Object defining valid model output types for a given modeling task. The name of each property corresponds to valid values in column 'type' while the 'type_id' property of each output type defines the valid values of the 'type_id' column and the 'value' property defines the valid values of the 'value' column for a given output type.\", #>                                     \"properties\": { #>                                         \"mean\": { #>                                             \"type\": \"object\", #>                                             \"description\": \"Object defining the mean of the predictive distribution output type.\", #>                                             \"properties\": { #>                                                 \"type_id\": { #>                                                     \"description\": \"type_id is not meaningful for a mean output_type. The property is primarily used to determine whether mean is a required or optional output type through properties required and optional. If mean is a required output type, the required property must be an array containing the single string element 'NA' and the optional property must be set to null. If mean is an optional output type, the optional property must be an array containing the single string element 'NA' and the required property must be set to null\", #>                                                     \"examples\": [ #>                                                         { #>                                                             \"required\": [ #>                                                                 \"NA\" #>                                                             ], #>                                                             \"optional\": null #>                                                         }, #>                                                         { #>                                                             \"required\": null, #>                                                             \"optional\": [ #>                                                                 \"NA\" #>                                                             ] #>                                                         } #>                                                     ], #>                                                     \"type\": \"object\", #>                                                     \"oneOf\": [ #>                                                         { #>                                                             \"properties\": { #>                                                                 \"required\": { #>                                                                     \"description\": \"When mean is required, property set to single element 'NA' array\", #>                                                                     \"type\": \"array\", #>                                                                     \"items\": { #>                                                                         \"const\": \"NA\", #>                                                                         \"maxItems\": 1 #>                                                                     } #>                                                                 }, #>                                                                 \"optional\": { #>                                                                     \"description\": \"When mean is required, property set to null\", #>                                                                     \"type\": \"null\" #>                                                                 } #>                                                             } #>                                                         }, #>                                                         { #>                                                             \"properties\": { #>                                                                 \"required\": { #>                                                                     \"description\": \"When mean is optional, property set to null\", #>                                                                     \"type\": \"null\" #>                                                                 }, #>                                                                 \"optional\": { #>                                                                     \"description\": \"When mean is optional, property set to single element 'NA' array\", #>                                                                     \"type\": \"array\", #>                                                                     \"items\": { #>                                                                         \"const\": \"NA\", #>                                                                         \"maxItems\": 1 #>                                                                     } #>                                                                 } #>                                                             } #>                                                         } #>                                                     ], #>                                                     \"required\": [ #>                                                         \"required\", #>                                                         \"optional\" #>                                                     ] #>                                                 }, #>                                                 \"value\": { #>                                                     \"type\": \"object\", #>                                                     \"description\": \"Object defining the characteristics of valid mean values.\", #>                                                     \"examples\": [ #>                                                         { #>                                                             \"type\": \"numeric\", #>                                                             \"minimum\": 0 #>                                                         } #>                                                     ], #>                                                     \"properties\": { #>                                                         \"type\": { #>                                                             \"description\": \"Data type of mean values.\", #>                                                             \"type\": \"string\", #>                                                             \"enum\": [ #>                                                                 \"numeric\", #>                                                                 \"double\", #>                                                                 \"integer\" #>                                                             ] #>                                                         }, #>                                                         \"minimum\": { #>                                                             \"description\": \"The minimum inclusive valid mean value\", #>                                                             \"type\": \"integer\" #>                                                         }, #>                                                         \"maximum\": { #>                                                             \"description\": \"the maximum inclusive valid mean value\", #>                                                             \"type\": \"integer\" #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"type\" #>                                                     ] #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"type_id\", #>                                                 \"value\" #>                                             ] #>                                         }, #>                                         \"median\": { #>                                             \"type\": \"object\", #>                                             \"description\": \"Object defining the median of the predictive distribution output type\", #>                                             \"properties\": { #>                                                 \"type_id\": { #>                                                     \"description\": \"type_id is not meaningful for a median output_type. The property is primarily used to determine whether median is a required or optional output type through properties required and optional. If median is a required output type, the required property must be an array containing the single string element 'NA' and the optional property must be set to null. If median is an optional output type, the optional property must be an array containing the single string element 'NA' and the required property must be set to null\", #>                                                     \"examples\": [ #>                                                         { #>                                                             \"required\": [ #>                                                                 \"NA\" #>                                                             ], #>                                                             \"optional\": null #>                                                         }, #>                                                         { #>                                                             \"required\": null, #>                                                             \"optional\": [ #>                                                                 \"NA\" #>                                                             ] #>                                                         } #>                                                     ], #>                                                     \"type\": \"object\", #>                                                     \"oneOf\": [ #>                                                         { #>                                                             \"properties\": { #>                                                                 \"required\": { #>                                                                     \"description\": \"When median is required, property set to single element 'NA' array\", #>                                                                     \"type\": \"array\", #>                                                                     \"items\": { #>                                                                         \"const\": \"NA\", #>                                                                         \"maxItems\": 1 #>                                                                     } #>                                                                 }, #>                                                                 \"optional\": { #>                                                                     \"description\": \"When median is required, property set to null\", #>                                                                     \"type\": \"null\" #>                                                                 } #>                                                             } #>                                                         }, #>                                                         { #>                                                             \"properties\": { #>                                                                 \"required\": { #>                                                                     \"description\": \"When median is optional, property set to null\", #>                                                                     \"type\": \"null\" #>                                                                 }, #>                                                                 \"optional\": { #>                                                                     \"description\": \"When median is optional, property set to single element 'NA' array\", #>                                                                     \"type\": \"array\", #>                                                                     \"items\": { #>                                                                         \"const\": \"NA\", #>                                                                         \"maxItems\": 1 #>                                                                     } #>                                                                 } #>                                                             } #>                                                         } #>                                                     ], #>                                                     \"required\": [ #>                                                         \"required\", #>                                                         \"optional\" #>                                                     ] #>                                                 }, #>                                                 \"value\": { #>                                                     \"type\": \"object\", #>                                                     \"description\": \"Object defining the characteristics of valid median values\", #>                                                     \"examples\": [ #>                                                         { #>                                                             \"type\": \"numeric\", #>                                                             \"minimum\": 0 #>                                                         } #>                                                     ], #>                                                     \"properties\": { #>                                                         \"type\": { #>                                                             \"description\": \"Data type of median values\", #>                                                             \"type\": \"string\", #>                                                             \"enum\": [ #>                                                                 \"numeric\", #>                                                                 \"double\", #>                                                                 \"integer\" #>                                                             ] #>                                                         }, #>                                                         \"minimum\": { #>                                                             \"description\": \"The minimum inclusive valid median value\", #>                                                             \"type\": \"integer\" #>                                                         }, #>                                                         \"maximum\": { #>                                                             \"description\": \"the maximum inclusive valid median value\", #>                                                             \"type\": \"integer\" #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"type\" #>                                                     ] #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"type_id\", #>                                                 \"value\" #>                                             ] #>                                         }, #>                                         \"quantile\": { #>                                             \"description\": \"Object defining the quantiles of the predictive distribution output type.\", #>                                             \"type\": \"object\", #>                                             \"properties\": { #>                                                 \"type_id\": { #>                                                     \"description\": \"Object containing required and optional arrays defining the probability levels at which quantiles of the predictive distribution will be recorded.\", #>                                                     \"examples\": [ #>                                                         { #>                                                             \"required\": [ #>                                                                 0.25, #>                                                                 0.5, #>                                                                 0.75 #>                                                             ], #>                                                             \"optional\": [ #>                                                                 0.1, #>                                                                 0.2, #>                                                                 0.3, #>                                                                 0.4, #>                                                                 0.6, #>                                                                 0.7, #>                                                                 0.8, #>                                                                 0.9 #>                                                             ] #>                                                         } #>                                                     ], #>                                                     \"type\": \"object\", #>                                                     \"properties\": { #>                                                         \"required\": { #>                                                             \"description\": \"Array of unique probability levels between 0 and 1 that must be present for submission to be valid. Can be null if no probability levels are required and all valid probability levels are specified in the optional property.\", #>                                                             \"type\": [ #>                                                                 \"array\", #>                                                                 \"null\" #>                                                             ], #>                                                             \"items\": { #>                                                                 \"type\": \"number\", #>                                                                 \"minimum\": 0, #>                                                                 \"maximum\": 1 #>                                                             } #>                                                         }, #>                                                         \"optional\": { #>                                                             \"description\": \"Array of valid but not required unique probability levels. Can be null if all probability levels are required and are specified in the required property.\", #>                                                             \"type\": [ #>                                                                 \"array\", #>                                                                 \"null\" #>                                                             ], #>                                                             \"items\": { #>                                                                 \"type\": \"number\", #>                                                                 \"minimum\": 0, #>                                                                 \"maximum\": 1 #>                                                             } #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"required\", #>                                                         \"optional\" #>                                                     ] #>                                                 }, #>                                                 \"value\": { #>                                                     \"type\": \"object\", #>                                                     \"description\": \"Object defining the characteristics of valid quantiles of the predictive distribution at a given probability level.\", #>                                                     \"properties\": { #>                                                         \"type\": { #>                                                             \"description\": \"Data type of quantile values.\", #>                                                             \"examples\": [ #>                                                                 \"numeric\" #>                                                             ], #>                                                             \"type\": \"string\", #>                                                             \"enum\": [ #>                                                                 \"numeric\", #>                                                                 \"double\", #>                                                                 \"integer\" #>                                                             ] #>                                                         }, #>                                                         \"minimum\": { #>                                                             \"description\": \"The minimum inclusive valid quantile value (optional).\", #>                                                             \"examples\": [ #>                                                                 0 #>                                                             ], #>                                                             \"type\": \"number\" #>                                                         }, #>                                                         \"maximum\": { #>                                                             \"description\": \"The maximum inclusive valid quantile value (optional).\", #>                                                             \"type\": \"number\" #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"type\" #>                                                     ] #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"type_id\", #>                                                 \"value\" #>                                             ] #>                                         }, #>                                         \"cdf\": { #>                                             \"description\": \"Object defining the cumulative distribution function of the predictive distribution output type.\", #>                                             \"type\": \"object\", #>                                             \"properties\": { #>                                                 \"type_id\": { #>                                                     \"description\": \"Object containing required and optional arrays defining possible values of the target variable at which values of the cumulative distribution function of the predictive distribution will be recorded.\", #>                                                     \"examples\": [ #>                                                         { #>                                                             \"required\": [ #>                                                                 10.0, #>                                                                 20.0 #>                                                             ], #>                                                             \"optional\": null #>                                                         }, #>                                                         { #>                                                             \"required\": [ #>                                                                 \"EW202240\", #>                                                                 \"EW202241\", #>                                                                 \"EW202242\", #>                                                                 \"EW202243\", #>                                                                 \"EW202244\", #>                                                                 \"EW202245\", #>                                                                 \"EW202246\", #>                                                                 \"EW202247\" #>                                                             ], #>                                                             \"optional\": null #>                                                         } #>                                                     ], #>                                                     \"type\": \"object\", #>                                                     \"properties\": { #>                                                         \"required\": { #>                                                             \"description\": \"Array of unique target values that must be present for submission to be valid. Can be null if no target values are required and all valid target values are specified in the optional property.\", #>                                                             \"type\": [ #>                                                                 \"array\", #>                                                                 \"null\" #>                                                             ], #>                                                             \"items\": { #>                                                                 \"oneOf\": [ #>                                                                     { #>                                                                         \"type\": \"number\", #>                                                                         \"minimum\": 0 #>                                                                     }, #>                                                                     { #>                                                                         \"type\": \"string\", #>                                                                         \"pattern\": \"^EW[0-9]{6}\", #>                                                                         \"minLength\": 8, #>                                                                         \"maxLength\": 8 #>                                                                     } #>                                                                 ] #>                                                             } #>                                                         }, #>                                                         \"optional\": { #>                                                             \"description\": \"Array of valid but not required unique target values. Can be null if all target values are required and are specified in the required property.\", #>                                                             \"type\": [ #>                                                                 \"array\", #>                                                                 \"null\" #>                                                             ], #>                                                             \"items\": { #>                                                                 \"oneOf\": [ #>                                                                     { #>                                                                         \"type\": \"number\", #>                                                                         \"minimum\": 0 #>                                                                     }, #>                                                                     { #>                                                                         \"type\": \"string\", #>                                                                         \"pattern\": \"^EW[0-9]{6}\", #>                                                                         \"minLength\": 8, #>                                                                         \"maxLength\": 8 #>                                                                     } #>                                                                 ] #>                                                             } #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"required\", #>                                                         \"optional\" #>                                                     ] #>                                                 }, #>                                                 \"value\": { #>                                                     \"type\": \"object\", #>                                                     \"description\": \"Object defining the characteristics of valid values of the cumulative distribution function at a given target value.\", #>                                                     \"properties\": { #>                                                         \"type\": { #>                                                             \"description\": \"Data type of cumulative distribution function values.\", #>                                                             \"examples\": [ #>                                                                 \"double\" #>                                                             ], #>                                                             \"enum\": [ #>                                                                 \"numeric\", #>                                                                 \"double\" #>                                                             ] #>                                                         }, #>                                                         \"minimum\": { #>                                                             \"description\": \"The minimum inclusive valid cumulative distribution function value. Must be 0.\", #>                                                             \"const\": 0 #>                                                         }, #>                                                         \"maximum\": { #>                                                             \"description\": \"The maximum inclusive valid cumulative distribution function value. Must be 1.\", #>                                                             \"const\": 1 #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"type\", #>                                                         \"minimum\", #>                                                         \"maximum\" #>                                                     ] #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"type_id\", #>                                                 \"value\" #>                                             ] #>                                         }, #>                                         \"categorical\": { #>                                             \"description\": \"Object defining a categorical output type.\", #>                                             \"type\": \"object\", #>                                             \"properties\": { #>                                                 \"type_id\": { #>                                                     \"description\": \"Object containing required and optional arrays specifying valid category values.\", #>                                                     \"examples\": [ #>                                                         { #>                                                             \"required\": null, #>                                                             \"optional\": [ #>                                                                 \"low\", #>                                                                 \"moderate\", #>                                                                 \"high\", #>                                                                 \"extreme\" #>                                                             ] #>                                                         } #>                                                     ], #>                                                     \"type\": \"object\", #>                                                     \"properties\": { #>                                                         \"required\": { #>                                                             \"description\": \"Array of unique categories that must be present for submission to be valid. Can be null if no categories are required and all valid categories are specified in the optional property.\", #>                                                             \"type\": [ #>                                                                 \"array\", #>                                                                 \"null\" #>                                                             ], #>                                                             \"items\": { #>                                                                 \"type\": \"string\" #>                                                             } #>                                                         }, #>                                                         \"optional\": { #>                                                             \"description\": \"Array of valid but not required unique categories. Can be null if all categories are required and are specified in the required property.\", #>                                                             \"type\": [ #>                                                                 \"array\", #>                                                                 \"null\" #>                                                             ], #>                                                             \"items\": { #>                                                                 \"type\": \"string\" #>                                                             } #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"required\", #>                                                         \"optional\" #>                                                     ] #>                                                 }, #>                                                 \"value\": { #>                                                     \"type\": \"object\", #>                                                     \"description\": \"Object defining valid values of the probability mass function of the predictive distribution for a given level of a categorical outcome variable.\", #>                                                     \"examples\": [ #>                                                         { #>                                                             \"type\": \"double\", #>                                                             \"minimum\": 0, #>                                                             \"maximum\": 1 #>                                                         } #>                                                     ], #>                                                     \"properties\": { #>                                                         \"type\": { #>                                                             \"description\": \"Data type of the probability mass function values.\", #>                                                             \"enum\": [ #>                                                                 \"numeric\", #>                                                                 \"double\" #>                                                             ] #>                                                         }, #>                                                         \"minimum\": { #>                                                             \"description\": \"The minimum inclusive valid probability mass function value. Must be 0.\", #>                                                             \"const\": 0 #>                                                         }, #>                                                         \"maximum\": { #>                                                             \"description\": \"The maximum inclusive valid probability mass function value. Must be 1.\", #>                                                             \"const\": 1 #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"type\", #>                                                         \"minimum\", #>                                                         \"maximum\" #>                                                     ] #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"type_id\", #>                                                 \"value\" #>                                             ] #>                                         }, #>                                         \"sample\": { #>                                             \"description\": \"Object defining a sample output type.\", #>                                             \"type\": \"object\", #>                                             \"properties\": { #>                                                 \"type_id\": { #>                                                     \"description\": \"Object containing required and optional arrays specifying valid sample values.\", #>                                                     \"examples\": [ #>                                                         { #>                                                             \"required\": [ #>                                                                 1, #>                                                                 2, #>                                                                 3, #>                                                                 4, #>                                                                 5, #>                                                                 6, #>                                                                 7, #>                                                                 8, #>                                                                 9, #>                                                                 10 #>                                                             ], #>                                                             \"optional\": [ #>                                                                 11, #>                                                                 12, #>                                                                 13, #>                                                                 14, #>                                                                 15 #>                                                             ] #>                                                         } #>                                                     ], #>                                                     \"type\": \"object\", #>                                                     \"properties\": { #>                                                         \"required\": { #>                                                             \"description\": \"Array of unique sample indexes that must be present for submission to be valid. Can be null if no sample indexes are required and all valid sample indexes are specified in the optional property.\", #>                                                             \"type\": [ #>                                                                 \"array\", #>                                                                 \"null\" #>                                                             ], #>                                                             \"items\": { #>                                                                 \"type\": \"integer\", #>                                                                 \"minimum\": 1 #>                                                             } #>                                                         }, #>                                                         \"optional\": { #>                                                             \"description\": \"Array of valid but not required unique sample indexes. Can be null if all sample indexes are required and are specified in the required property.\", #>                                                             \"type\": [ #>                                                                 \"array\", #>                                                                 \"null\" #>                                                             ], #>                                                             \"items\": { #>                                                                 \"type\": \"integer\", #>                                                                 \"minimum\": 1 #>                                                             } #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"required\", #>                                                         \"optional\" #>                                                     ] #>                                                 }, #>                                                 \"value\": { #>                                                     \"type\": \"object\", #>                                                     \"description\": \"Object defining valid values of samples from the predictive distribution for a given sample index.  Depending on the Hub specification, samples with the same sample index (specified by the type_id) may be assumed to correspond to a joint distribution across multiple levels of the task id variables. See Hub documentation for details.\", #>                                                     \"properties\": { #>                                                         \"type\": { #>                                                             \"description\": \"Data type of sample value from the predictive distribution.\", #>                                                             \"examples\": [ #>                                                                 { #>                                                                     \"type\": \"double\" #>                                                                 } #>                                                             ], #>                                                             \"enum\": [ #>                                                                 \"numeric\", #>                                                                 \"double\", #>                                                                 \"integer\" #>                                                             ] #>                                                         }, #>                                                         \"minimum\": { #>                                                             \"description\": \"The minimum inclusive valid sample value from the predictive distribution\" #>                                                         }, #>                                                         \"maximum\": { #>                                                             \"description\": \"The maximum inclusive valid sample value from the predictive distribution\" #>                                                         } #>                                                     }, #>                                                     \"required\": [ #>                                                         \"type\" #>                                                     ] #>                                                 } #>                                             }, #>                                             \"required\": [ #>                                                 \"type_id\", #>                                                 \"value\" #>                                             ] #>                                         } #>                                     } #>                                 } #>                             }, #>                             \"required\": [ #>                                 \"task_ids\", #>                                 \"output_type\" #>                             ] #>                         } #>                     }, #>                     \"submissions_due\": { #>                         \"description\": \"Object defining the dates by which model forecasts must be submitted to the hub.\", #>                         \"examples\": [ #>                             { #>                                 \"start\": \"2022-06-07\", #>                                 \"end\": \"2022-07-20\" #>                             }, #>                             { #>                                 \"relative_to\": \"origin_date\", #>                                 \"start\": -4, #>                                 \"end\": 2 #>                             } #>                         ], #>                         \"type\": \"object\", #>                         \"oneOf\": [ #>                             { #>                                 \"properties\": { #>                                     \"relative_to\": { #>                                         \"description\": \"Name of task id variable in relation to which submission start and end dates are calculated.\", #>                                         \"type\": \"string\" #>                                     }, #>                                     \"start\": { #>                                         \"description\": \"Difference in days between start and origin date.\", #>                                         \"type\": \"integer\" #>                                     }, #>                                     \"end\": { #>                                         \"description\": \"Difference in days between end and origin date.\", #>                                         \"type\": \"integer\" #>                                     } #>                                 }, #>                                 \"required\": [ #>                                     \"relative_to\", #>                                     \"start\", #>                                     \"end\" #>                                 ] #>                             }, #>                             { #>                                 \"properties\": { #>                                     \"start\": { #>                                         \"description\": \"Submission start date.\", #>                                         \"type\": \"string\", #>                                         \"format\": \"date\" #>                                     }, #>                                     \"end\": { #>                                         \"description\": \"Submission end date.\", #>                                         \"type\": \"string\", #>                                         \"format\": \"date\" #>                                     } #>                                 }, #>                                 \"required\": [ #>                                     \"start\", #>                                     \"end\" #>                                 ] #>                             } #>                         ], #>                         \"required\": [ #>                             \"start\", #>                             \"end\" #>                         ] #>                     }, #>                     \"last_data_date\": { #>                         \"description\": \"The last date with recorded data in the data set used as input to a model.\", #>                         \"examples\": [ #>                             \"2022-07-18\" #>                         ], #>                         \"type\": \"string\", #>                         \"format\": \"date\" #>                     } #>                 }, #>                 \"required\": [ #>                     \"round_id_from_variable\", #>                     \"round_id\", #>                     \"model_tasks\", #>                     \"submissions_due\" #>                 ] #>             } #>         }, #>         \"$defs\": { #>  #>         } #>     }, #>     \"required\": [ #>         \"rounds\", #>         \"schema_version\" #>     ] #> } #>"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the JSON schema download URL for a given config file version — get_schema_url","title":"Get the JSON schema download URL for a given config file version — get_schema_url","text":"Get JSON schema download URL given config file version","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the JSON schema download URL for a given config file version — get_schema_url","text":"","code":"get_schema_url(config = c(\"tasks\", \"admin\", \"model\"), version, branch = \"main\")"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the JSON schema download URL for a given config file version — get_schema_url","text":"config Name config file validate. One \"tasks\" \"admin\". version valid version hubverse schema (e.g. \"v0.0.1\"). branch branch hubverse schemas repository fetch schema. Defaults \"main\".","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the JSON schema download URL for a given config file version — get_schema_url","text":"JSON schema download URL given config file version.","code":""},{"path":[]},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the JSON schema download URL for a given config file version — get_schema_url","text":"","code":"get_schema_url(config = \"tasks\", version = \"v0.0.0.9\") #> https://raw.githubusercontent.com/hubverse-org/schemas/main/v0.0.0.9/tasks-schema.json"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_valid_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a vector of valid schema version — get_schema_valid_versions","title":"Get a vector of valid schema version — get_schema_valid_versions","text":"Get vector valid schema version","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_valid_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a vector of valid schema version — get_schema_valid_versions","text":"","code":"get_schema_valid_versions(branch = \"main\")"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_valid_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a vector of valid schema version — get_schema_valid_versions","text":"branch branch hubverse schemas repository fetch schema. Defaults \"main\".","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_valid_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a vector of valid schema version — get_schema_valid_versions","text":"character vector valid versions hubverse schema.","code":""},{"path":[]},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_valid_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a vector of valid schema version — get_schema_valid_versions","text":"","code":"get_schema_valid_versions() #> [1] \"v0.0.0.9\" \"v0.0.1\"   \"v1.0.0\"   \"v2.0.0\"   \"v2.0.1\"   \"v3.0.0\"   \"v3.0.1\"   #> [8] \"v4.0.0\"   \"v5.0.0\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_version_latest.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the latest schema version — get_schema_version_latest","title":"Get the latest schema version — get_schema_version_latest","text":"Get latest schema version schema repository \"latest\" requested (default) ignore specific version provided.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_version_latest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the latest schema version — get_schema_version_latest","text":"","code":"get_schema_version_latest(schema_version = \"latest\", branch = \"main\")"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_version_latest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the latest schema version — get_schema_version_latest","text":"schema_version character vector. Either \"latest\" valid schema version. branch branch hubverse schemas repository fetch schema. Defaults \"main\".","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_version_latest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the latest schema version — get_schema_version_latest","text":"schema version string. schema_version \"latest\", latest schema version schema repository. specific version provided schema_version, version returned.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_schema_version_latest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the latest schema version — get_schema_version_latest","text":"","code":"# Get the latest version of the schema get_schema_version_latest() #> [1] \"v5.0.0\" get_schema_version_latest(schema_version = \"v3.0.0\") #> [1] \"v3.0.0\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_task_id_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hub task IDs — get_task_id_names","title":"Get hub task IDs — get_task_id_names","text":"Get hub task IDs","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_task_id_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hub task IDs — get_task_id_names","text":"","code":"get_task_id_names(config_tasks)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_task_id_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get hub task IDs — get_task_id_names","text":"config_tasks list version content's hub's tasks.json config file, accessed \"config_tasks\" attribute <hub_connection> object function read_config().","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_task_id_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get hub task IDs — get_task_id_names","text":"character vector unique task ID names across rounds.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_task_id_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get hub task IDs — get_task_id_names","text":"","code":"hub_path <- system.file(\"testhubs/simple\", package = \"hubUtils\") config_tasks <- read_config(hub_path, \"tasks\") get_task_id_names(config_tasks) #> [1] \"origin_date\" \"target\"      \"horizon\"     \"location\"    \"age_group\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_version_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hub config schema versions — get_version_config","title":"Get hub config schema versions — get_version_config","text":"Get hub config schema versions","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_version_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hub config schema versions — get_version_config","text":"","code":"get_version_config(config)  get_version_file(config_path)  get_version_hub(hub_path, config_type = c(\"tasks\", \"admin\"))"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_version_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get hub config schema versions — get_version_config","text":"config <config> class object. Usually output read_config read_config_file. config_path Character string. Path JSON config file. hub_path Either character string path local Modeling Hub directory object class <SubTreeFileSystem> created using functions arrow::s3_bucket() arrow::gs_bucket() providing string S3 GCS bucket name path Modeling Hub directory stored cloud. details consult Using cloud storage (S3, GCS) arrow package. config_type Character vector specifying type config file read. One \"tasks\" \"admin\". Default \"tasks\".","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_version_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get hub config schema versions — get_version_config","text":"schema version number character string.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_version_config.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get hub config schema versions — get_version_config","text":"get_version_config(): Get schema version config list representation. get_version_file(): Get schema version config file specific path. get_version_hub(): Get schema version config file specific path.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/get_version_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get hub config schema versions — get_version_config","text":"","code":"config <- read_config_file(   system.file(\"config\", \"tasks.json\", package = \"hubUtils\") ) get_version_config(config) #> [1] \"v3.0.0\" config_path <- system.file(\"config\", \"tasks.json\", package = \"hubUtils\") get_version_file(config_path) #> [1] \"v3.0.0\" hub_path <- system.file(\"testhubs/simple\", package = \"hubUtils\") get_version_hub(hub_path) #> [1] \"v2.0.0\" get_version_hub(hub_path, \"admin\") #> [1] \"v2.0.0\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/hub_con_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Hub model output data — hub_con_output","title":"Example Hub model output data — hub_con_output","text":"subset model output data accessed using hubData simple example hub contained hubUtils package. subset consists \"quantile\" output type data \"US\" location recent forecast date.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/hub_con_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Hub model output data — hub_con_output","text":"","code":"hub_con_output"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/hub_con_output.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Hub model output data — hub_con_output","text":"tbl 92 rows 8 columns: forecast_date: Origin date forecast. horizon: Forecast horizon relative forecast_date. target: Target variable. location: Location forecast. output_type: Output type forecast. output_type_id: Forecast output type level/identifier. case, quantile level. value: Forecast value. model_id: Model identifier.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Is config list representation using v3.0.0 schema? — is_v3_config","title":"Is config list representation using v3.0.0 schema? — is_v3_config","text":"config list representation using v3.0.0 schema?","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is config list representation using v3.0.0 schema? — is_v3_config","text":"","code":"is_v3_config(config)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is config list representation using v3.0.0 schema? — is_v3_config","text":"config List representation JSON config file.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is config list representation using v3.0.0 schema? — is_v3_config","text":"Logical, whether config list representation using v3.0.0 schema greater.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is config list representation using v3.0.0 schema? — is_v3_config","text":"","code":"config <- read_config_file(   system.file(\"config\", \"tasks.json\", package = \"hubUtils\") ) is_v3_config(config) #> [1] TRUE"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Is config file using v3.0.0 schema? — is_v3_config_file","title":"Is config file using v3.0.0 schema? — is_v3_config_file","text":"config file using v3.0.0 schema?","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is config file using v3.0.0 schema? — is_v3_config_file","text":"","code":"is_v3_config_file(config_path)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is config file using v3.0.0 schema? — is_v3_config_file","text":"config_path Path config file.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is config file using v3.0.0 schema? — is_v3_config_file","text":"Logical, whether config file using v3.0.0 schema greater.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_config_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is config file using v3.0.0 schema? — is_v3_config_file","text":"","code":"config_path <- system.file(\"config\", \"tasks.json\", package = \"hubUtils\") is_v3_config_file(config_path) #> [1] TRUE"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_hub.html","id":null,"dir":"Reference","previous_headings":"","what":"Is hub configured using v3.0.0 schema? — is_v3_hub","title":"Is hub configured using v3.0.0 schema? — is_v3_hub","text":"hub configured using v3.0.0 schema?","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_hub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is hub configured using v3.0.0 schema? — is_v3_hub","text":"","code":"is_v3_hub(hub_path, config = c(\"tasks\", \"admin\"))"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_hub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is hub configured using v3.0.0 schema? — is_v3_hub","text":"hub_path Either character string path local Modeling Hub directory object class <SubTreeFileSystem> created using functions arrow::s3_bucket() arrow::gs_bucket() providing string S3 GCS bucket name path Modeling Hub directory stored cloud. details consult Using cloud storage (S3, GCS) arrow package. config Type config file read. One \"tasks\", \"admin\" \"model-metadata-schema\". Default \"tasks\".","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_hub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is hub configured using v3.0.0 schema? — is_v3_hub","text":"Logical, whether hub configured using v3.0.0 schema greater.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/is_v3_hub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is hub configured using v3.0.0 schema? — is_v3_hub","text":"","code":"is_v3_hub(hub_path = system.file(\"testhubs\", \"flusight\", package = \"hubUtils\")) #> [1] FALSE"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/model_id_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge/Split model output tbl model_id column — model_id_merge","title":"Merge/Split model output tbl model_id column — model_id_merge","text":"Merge/Split model output tbl model_id column","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/model_id_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge/Split model output tbl model_id column — model_id_merge","text":"","code":"model_id_merge(tbl, sep = \"-\")  model_id_split(tbl, sep = \"-\")"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/model_id_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge/Split model output tbl model_id column — model_id_merge","text":"tbl data.frame tibble model output data returned query <hub_connection> object. sep character string. Character used separator concatenating team_abbr model_abbr values single model_id string splitting model_id component team_abbr model_abbr. splitting, multiple instances separator exist model_id stringing, splitting occurs occurs first instance.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/model_id_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge/Split model output tbl model_id column — model_id_merge","text":"tbl either team_abbr model_abbr merged single model_id column model_id split columns team_abbr model_abbr. tibble model_id column split separate team_abbr model_abbr columns","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/model_id_merge.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Merge/Split model output tbl model_id column — model_id_merge","text":"model_id_merge(): merge team_abbr model_abbr single model_id column. model_id_split(): split model_id column separate team_abbr model_abbr columns.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/model_id_merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge/Split model output tbl model_id column — model_id_merge","text":"","code":"tbl_split <- model_id_split(hub_con_output) tbl_split #> # A tibble: 92 × 9 #>    team_abbr model_abbr forecast_date horizon target        location output_type #>    <chr>     <chr>      <date>          <int> <chr>         <chr>    <chr>       #>  1 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  2 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  3 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  4 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  5 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  6 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  7 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  8 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  9 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #> 10 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #> # ℹ 82 more rows #> # ℹ 2 more variables: output_type_id <chr>, value <dbl>  # Merge model_id tbl_merged <- model_id_merge(tbl_split) tbl_merged #> # A tibble: 92 × 8 #>    model_id     forecast_date horizon target location output_type output_type_id #>    <chr>        <date>          <int> <chr>  <chr>    <chr>       <chr>          #>  1 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.01           #>  2 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.025          #>  3 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.05           #>  4 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.1            #>  5 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.15           #>  6 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.2            #>  7 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.25           #>  8 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.3            #>  9 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.35           #> 10 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.4            #> # ℹ 82 more rows #> # ℹ 1 more variable: value <dbl>  # Split / Merge using custom separator tbl_sep <- hub_con_output tbl_sep$model_id <- gsub(\"-\", \"_\", tbl_sep$model_id) tbl_sep <- model_id_split(tbl_sep, sep = \"_\") tbl_sep #> # A tibble: 92 × 9 #>    team_abbr model_abbr forecast_date horizon target        location output_type #>    <chr>     <chr>      <date>          <int> <chr>         <chr>    <chr>       #>  1 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  2 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  3 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  4 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  5 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  6 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  7 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  8 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #>  9 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #> 10 hub       baseline   2023-05-08          1 wk ahead inc… US       quantile    #> # ℹ 82 more rows #> # ℹ 2 more variables: output_type_id <chr>, value <dbl> tbl_sep <- model_id_merge(tbl_sep, sep = \"_\") tbl_sep #> # A tibble: 92 × 8 #>    model_id     forecast_date horizon target location output_type output_type_id #>    <chr>        <date>          <int> <chr>  <chr>    <chr>       <chr>          #>  1 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.01           #>  2 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.025          #>  3 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.05           #>  4 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.1            #>  5 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.15           #>  6 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.2            #>  7 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.25           #>  8 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.3            #>  9 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.35           #> 10 hub_baseline 2023-05-08          1 wk ah… US       quantile    0.4            #> # ℹ 82 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a hub config file into R — read_config","title":"Read a hub config file into R — read_config","text":"Read hub config file R","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a hub config file into R — read_config","text":"","code":"read_config(   hub_path,   config = c(\"tasks\", \"admin\", \"model-metadata-schema\"),   silent = TRUE )"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a hub config file into R — read_config","text":"hub_path Either character string path local Modeling Hub directory object class <SubTreeFileSystem> created using functions arrow::s3_bucket() arrow::gs_bucket() providing string S3 GCS bucket name path Modeling Hub directory stored cloud. details consult Using cloud storage (S3, GCS) arrow package. config Type config file read. One \"tasks\", \"admin\" \"model-metadata-schema\". Default \"tasks\". silent Logical. TRUE, suppress warnings. Default FALSE.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a hub config file into R — read_config","text":"contents config file R list. possible, output converted <config> class object returning. Note \"model-metadata-schema\" files never converted <config> object.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a hub config file into R — read_config","text":"","code":"# Read config files from local hub hub_path <- system.file(\"testhubs/simple\", package = \"hubUtils\") read_config(hub_path, \"tasks\") #> $schema_version #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v2.0.0/tasks-schema.json\" #>  #> $rounds #> $rounds[[1]] #> $rounds[[1]]$round_id_from_variable #> [1] TRUE #>  #> $rounds[[1]]$round_id #> [1] \"origin_date\" #>  #> $rounds[[1]]$model_tasks #> $rounds[[1]]$model_tasks[[1]] #> $rounds[[1]]$model_tasks[[1]]$task_ids #> $rounds[[1]]$model_tasks[[1]]$task_ids$origin_date #> $rounds[[1]]$model_tasks[[1]]$task_ids$origin_date$required #> NULL #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$origin_date$optional #> [1] \"2022-10-01\" \"2022-10-08\" #>  #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$target #> $rounds[[1]]$model_tasks[[1]]$task_ids$target$required #> [1] \"wk inc flu hosp\" #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$target$optional #> NULL #>  #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$horizon #> $rounds[[1]]$model_tasks[[1]]$task_ids$horizon$required #> [1] 1 #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$horizon$optional #> [1] 2 3 4 #>  #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$location #> $rounds[[1]]$model_tasks[[1]]$task_ids$location$required #> NULL #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$location$optional #>  [1] \"US\" \"01\" \"02\" \"04\" \"05\" \"06\" \"08\" \"09\" \"10\" \"11\" \"12\" \"13\" \"15\" \"16\" \"17\" #> [16] \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" \"31\" \"32\" #> [31] \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"44\" \"45\" \"46\" \"47\" \"48\" #> [46] \"49\" \"50\" \"51\" \"53\" \"54\" \"55\" \"56\" \"72\" \"78\" #>  #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type #> $rounds[[1]]$model_tasks[[1]]$output_type$mean #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$output_type_id #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$output_type_id$required #> NULL #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$output_type_id$optional #> [1] NA #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$value #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$value$type #> [1] \"integer\" #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$value$minimum #> [1] 0 #>  #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$output_type_id #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$output_type_id$required #>  [1] 0.010 0.025 0.050 0.100 0.150 0.200 0.250 0.300 0.350 0.400 0.450 0.500 #> [13] 0.550 0.600 0.650 0.700 0.750 0.800 0.850 0.900 0.950 0.975 0.990 #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$output_type_id$optional #> NULL #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$value #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$value$type #> [1] \"integer\" #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$quantile$value$minimum #> [1] 0 #>  #>  #>  #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]] #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_id #> [1] \"wk inc flu hosp\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_name #> [1] \"Weekly incident influenza hospitalizations\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_units #> [1] \"count\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_keys #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_keys$target #> [1] \"wk inc flu hosp\" #>  #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_type #> [1] \"continuous\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$is_step_ahead #> [1] TRUE #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$time_unit #> [1] \"week\" #>  #>  #>  #>  #>  #> $rounds[[1]]$submissions_due #> $rounds[[1]]$submissions_due$relative_to #> [1] \"origin_date\" #>  #> $rounds[[1]]$submissions_due$start #> [1] -6 #>  #> $rounds[[1]]$submissions_due$end #> [1] 1 #>  #>  #>  #> $rounds[[2]] #> $rounds[[2]]$round_id_from_variable #> [1] TRUE #>  #> $rounds[[2]]$round_id #> [1] \"origin_date\" #>  #> $rounds[[2]]$model_tasks #> $rounds[[2]]$model_tasks[[1]] #> $rounds[[2]]$model_tasks[[1]]$task_ids #> $rounds[[2]]$model_tasks[[1]]$task_ids$origin_date #> $rounds[[2]]$model_tasks[[1]]$task_ids$origin_date$required #> NULL #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$origin_date$optional #> [1] \"2022-10-15\" \"2022-10-22\" \"2022-10-29\" #>  #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$target #> $rounds[[2]]$model_tasks[[1]]$task_ids$target$required #> [1] \"wk inc flu hosp\" #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$target$optional #> NULL #>  #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$horizon #> $rounds[[2]]$model_tasks[[1]]$task_ids$horizon$required #> [1] 1 #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$horizon$optional #> [1] 2 3 4 #>  #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$location #> $rounds[[2]]$model_tasks[[1]]$task_ids$location$required #> NULL #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$location$optional #>  [1] \"US\" \"01\" \"02\" \"04\" \"05\" \"06\" \"08\" \"09\" \"10\" \"11\" \"12\" \"13\" \"15\" \"16\" \"17\" #> [16] \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" \"31\" \"32\" #> [31] \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"44\" \"45\" \"46\" \"47\" \"48\" #> [46] \"49\" \"50\" \"51\" \"53\" \"54\" \"55\" \"56\" \"72\" \"78\" #>  #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$age_group #> $rounds[[2]]$model_tasks[[1]]$task_ids$age_group$required #> [1] \"65+\" #>  #> $rounds[[2]]$model_tasks[[1]]$task_ids$age_group$optional #> [1] \"0-5\"   \"6-18\"  \"19-24\" \"25-64\" #>  #>  #>  #> $rounds[[2]]$model_tasks[[1]]$output_type #> $rounds[[2]]$model_tasks[[1]]$output_type$mean #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$output_type_id #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$output_type_id$required #> NULL #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$output_type_id$optional #> [1] NA #>  #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$value #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$value$type #> [1] \"integer\" #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$mean$value$minimum #> [1] 0 #>  #>  #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$output_type_id #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$output_type_id$required #>  [1] 0.010 0.025 0.050 0.100 0.150 0.200 0.250 0.300 0.350 0.400 0.450 0.500 #> [13] 0.550 0.600 0.650 0.700 0.750 0.800 0.850 0.900 0.950 0.975 0.990 #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$output_type_id$optional #> NULL #>  #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$value #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$value$type #> [1] \"integer\" #>  #> $rounds[[2]]$model_tasks[[1]]$output_type$quantile$value$minimum #> [1] 0 #>  #>  #>  #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]] #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_id #> [1] \"wk inc flu hosp\" #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_name #> [1] \"Weekly incident influenza hospitalizations\" #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_units #> [1] \"count\" #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_keys #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_keys$target #> [1] \"wk inc flu hosp\" #>  #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$target_type #> [1] \"continuous\" #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$is_step_ahead #> [1] TRUE #>  #> $rounds[[2]]$model_tasks[[1]]$target_metadata[[1]]$time_unit #> [1] \"week\" #>  #>  #>  #>  #>  #> $rounds[[2]]$submissions_due #> $rounds[[2]]$submissions_due$relative_to #> [1] \"origin_date\" #>  #> $rounds[[2]]$submissions_due$start #> [1] -6 #>  #> $rounds[[2]]$submissions_due$end #> [1] 1 #>  #>  #>  #>  #> attr(,\"schema_id\") #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v2.0.0/tasks-schema.json\" #> attr(,\"type\") #> [1] \"tasks\" #> attr(,\"class\") #> [1] \"config\" \"list\"   read_config(hub_path, \"admin\") #> $schema_version #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v2.0.0/admin-schema.json\" #>  #> $name #> [1] \"Simple Forecast Hub\" #>  #> $maintainer #> [1] \"Consortium of Infectious Disease Modeling Hubs\" #>  #> $contact #> $contact$name #> [1] \"Joe Bloggs\" #>  #> $contact$email #> [1] \"j.bloggs@cidmh.com\" #>  #>  #> $repository_url #> [1] \"https://github.com/hubverse-org/example-simple-forecast-hub\" #>  #> $hub_models #> $hub_models[[1]] #> $hub_models[[1]]$team_abbr #> [1] \"simple_hub\" #>  #> $hub_models[[1]]$model_abbr #> [1] \"baseline\" #>  #> $hub_models[[1]]$model_type #> [1] \"baseline\" #>  #>  #>  #> $file_format #> [1] \"csv\"     \"parquet\" \"arrow\"   #>  #> $timezone #> [1] \"US/Eastern\" #>  #> attr(,\"schema_id\") #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v2.0.0/admin-schema.json\" #> attr(,\"type\") #> [1] \"admin\" #> attr(,\"class\") #> [1] \"config\" \"list\"    # Read config file from AWS S3 bucket hub hub_path <- arrow::s3_bucket(\"hubverse/hubutils/testhubs/simple/\") read_config(hub_path, \"admin\") #> ℹ Updating superseded URL `Infectious-Disease-Modeling-hubs` to `hubverse-org` #> $schema_version #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v2.0.0/admin-schema.json\" #>  #> $name #> [1] \"Simple Forecast Hub\" #>  #> $maintainer #> [1] \"Consortium of Infectious Disease Modeling Hubs\" #>  #> $contact #> $contact$name #> [1] \"Joe Bloggs\" #>  #> $contact$email #> [1] \"j.bloggs@cidmh.com\" #>  #>  #> $repository_url #> [1] \"https://github.com/Infectious-Disease-Modeling-Hubs/example-simple-forecast-hub\" #>  #> $hub_models #> $hub_models[[1]] #> $hub_models[[1]]$team_abbr #> [1] \"simple_hub\" #>  #> $hub_models[[1]]$model_abbr #> [1] \"baseline\" #>  #> $hub_models[[1]]$model_type #> [1] \"baseline\" #>  #>  #>  #> $file_format #> [1] \"csv\"     \"parquet\" \"arrow\"   #>  #> $timezone #> [1] \"US/Eastern\" #>  #> attr(,\"schema_id\") #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v2.0.0/admin-schema.json\" #> attr(,\"type\") #> [1] \"admin\" #> attr(,\"class\") #> [1] \"config\" \"list\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a JSON config file from a path — read_config_file","title":"Read a JSON config file from a path — read_config_file","text":"Read JSON config file path","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a JSON config file from a path — read_config_file","text":"","code":"read_config_file(config_path, silent = TRUE)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a JSON config file from a path — read_config_file","text":"config_path Character string. Path JSON config file. silent Logical. TRUE, suppress warnings. Default FALSE.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a JSON config file from a path — read_config_file","text":"contents config file R list. possible, output converted <config> class object returning. Note \"model-metadata-schema\" files never converted <config> object.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/read_config_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a JSON config file from a path — read_config_file","text":"","code":"read_config_file(system.file(\"config\", \"tasks.json\", package = \"hubUtils\")) #> $schema_version #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v3.0.0/tasks-schema.json\" #>  #> $rounds #> $rounds[[1]] #> $rounds[[1]]$round_id_from_variable #> [1] TRUE #>  #> $rounds[[1]]$round_id #> [1] \"forecast_date\" #>  #> $rounds[[1]]$model_tasks #> $rounds[[1]]$model_tasks[[1]] #> $rounds[[1]]$model_tasks[[1]]$task_ids #> $rounds[[1]]$model_tasks[[1]]$task_ids$forecast_date #> $rounds[[1]]$model_tasks[[1]]$task_ids$forecast_date$required #> NULL #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$forecast_date$optional #>  [1] \"2022-12-12\" \"2022-12-19\" \"2022-12-26\" \"2023-01-02\" \"2023-01-09\" #>  [6] \"2023-01-16\" \"2023-01-23\" \"2023-01-30\" \"2023-02-06\" \"2023-02-13\" #> [11] \"2023-02-20\" \"2023-02-27\" \"2023-03-06\" \"2023-03-13\" \"2023-03-20\" #> [16] \"2023-03-27\" \"2023-04-03\" \"2023-04-10\" \"2023-04-17\" \"2023-04-24\" #> [21] \"2023-05-01\" \"2023-05-08\" \"2023-05-15\" #>  #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$target #> $rounds[[1]]$model_tasks[[1]]$task_ids$target$required #> NULL #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$target$optional #> [1] \"wk ahead inc flu hosp\" #>  #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$horizon #> $rounds[[1]]$model_tasks[[1]]$task_ids$horizon$required #> [1] 2 #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$horizon$optional #> [1] 1 #>  #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$location #> $rounds[[1]]$model_tasks[[1]]$task_ids$location$required #> [1] \"US\" #>  #> $rounds[[1]]$model_tasks[[1]]$task_ids$location$optional #> [1] \"01\" \"02\" #>  #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type #> $rounds[[1]]$model_tasks[[1]]$output_type$sample #> $rounds[[1]]$model_tasks[[1]]$output_type$sample$output_type_id_params #> $rounds[[1]]$model_tasks[[1]]$output_type$sample$output_type_id_params$is_required #> [1] TRUE #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$sample$output_type_id_params$type #> [1] \"character\" #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$sample$output_type_id_params$min_samples_per_task #> [1] 50 #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$sample$output_type_id_params$max_samples_per_task #> [1] 100 #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$sample$value #> $rounds[[1]]$model_tasks[[1]]$output_type$sample$value$type #> [1] \"integer\" #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$sample$value$minimum #> [1] 0 #>  #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$output_type_id #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$output_type_id$required #> NULL #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$output_type_id$optional #> [1] NA #>  #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$value #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$value$type #> [1] \"double\" #>  #> $rounds[[1]]$model_tasks[[1]]$output_type$mean$value$minimum #> [1] 0 #>  #>  #>  #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]] #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_id #> [1] \"wk ahead inc flu hosp\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_name #> [1] \"weekly influenza hospitalization incidence\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_units #> [1] \"rate per 100,000 population\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_keys #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_keys$target #> [1] \"wk ahead inc flu hosp\" #>  #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$target_type #> [1] \"discrete\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$description #> [1] \"This target represents the counts of new hospitalizations per horizon week.\" #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$is_step_ahead #> [1] TRUE #>  #> $rounds[[1]]$model_tasks[[1]]$target_metadata[[1]]$time_unit #> [1] \"week\" #>  #>  #>  #>  #> $rounds[[1]]$model_tasks[[2]] #> $rounds[[1]]$model_tasks[[2]]$task_ids #> $rounds[[1]]$model_tasks[[2]]$task_ids$forecast_date #> $rounds[[1]]$model_tasks[[2]]$task_ids$forecast_date$required #> NULL #>  #> $rounds[[1]]$model_tasks[[2]]$task_ids$forecast_date$optional #>  [1] \"2022-12-12\" \"2022-12-19\" \"2022-12-26\" \"2023-01-02\" \"2023-01-09\" #>  [6] \"2023-01-16\" \"2023-01-23\" \"2023-01-30\" \"2023-02-06\" \"2023-02-13\" #> [11] \"2023-02-20\" \"2023-02-27\" \"2023-03-06\" \"2023-03-13\" \"2023-03-20\" #> [16] \"2023-03-27\" \"2023-04-03\" \"2023-04-10\" \"2023-04-17\" \"2023-04-24\" #> [21] \"2023-05-01\" \"2023-05-08\" \"2023-05-15\" #>  #>  #> $rounds[[1]]$model_tasks[[2]]$task_ids$target #> $rounds[[1]]$model_tasks[[2]]$task_ids$target$required #> NULL #>  #> $rounds[[1]]$model_tasks[[2]]$task_ids$target$optional #> [1] \"wk flu hosp rate change\" #>  #>  #> $rounds[[1]]$model_tasks[[2]]$task_ids$horizon #> $rounds[[1]]$model_tasks[[2]]$task_ids$horizon$required #> [1] 2 #>  #> $rounds[[1]]$model_tasks[[2]]$task_ids$horizon$optional #> [1] 1 #>  #>  #> $rounds[[1]]$model_tasks[[2]]$task_ids$location #> $rounds[[1]]$model_tasks[[2]]$task_ids$location$required #> [1] \"US\" #>  #> $rounds[[1]]$model_tasks[[2]]$task_ids$location$optional #> [1] \"01\" \"02\" #>  #>  #>  #> $rounds[[1]]$model_tasks[[2]]$output_type #> $rounds[[1]]$model_tasks[[2]]$output_type$pmf #> $rounds[[1]]$model_tasks[[2]]$output_type$pmf$output_type_id #> $rounds[[1]]$model_tasks[[2]]$output_type$pmf$output_type_id$required #> [1] \"large_decrease\" \"decrease\"       \"stable\"         \"increase\"       #> [5] \"large_increase\" #>  #> $rounds[[1]]$model_tasks[[2]]$output_type$pmf$output_type_id$optional #> NULL #>  #>  #> $rounds[[1]]$model_tasks[[2]]$output_type$pmf$value #> $rounds[[1]]$model_tasks[[2]]$output_type$pmf$value$type #> [1] \"double\" #>  #> $rounds[[1]]$model_tasks[[2]]$output_type$pmf$value$minimum #> [1] 0 #>  #> $rounds[[1]]$model_tasks[[2]]$output_type$pmf$value$maximum #> [1] 1 #>  #>  #>  #>  #> $rounds[[1]]$model_tasks[[2]]$target_metadata #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]] #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]]$target_id #> [1] \"wk flu hosp rate change\" #>  #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]]$target_name #> [1] \"weekly influenza hospitalization rate change\" #>  #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]]$target_units #> [1] \"rate per 100,000 population\" #>  #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]]$target_keys #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]]$target_keys$target #> [1] \"wk flu hosp rate change\" #>  #>  #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]]$target_type #> [1] \"nominal\" #>  #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]]$description #> [1] \"This target represents the change in the rate of new hospitalizations per week comparing the week ending two days prior to the forecast_date to the week ending h weeks after the forecast_date.\" #>  #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]]$is_step_ahead #> [1] TRUE #>  #> $rounds[[1]]$model_tasks[[2]]$target_metadata[[1]]$time_unit #> [1] \"week\" #>  #>  #>  #>  #>  #> $rounds[[1]]$submissions_due #> $rounds[[1]]$submissions_due$relative_to #> [1] \"forecast_date\" #>  #> $rounds[[1]]$submissions_due$start #> [1] -6 #>  #> $rounds[[1]]$submissions_due$end #> [1] 2 #>  #>  #>  #>  #> attr(,\"schema_id\") #> [1] \"https://raw.githubusercontent.com/hubverse-org/schemas/main/v3.0.0/tasks-schema.json\" #> attr(,\"type\") #> [1] \"tasks\" #> attr(,\"class\") #> [1] \"config\" \"list\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/std_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Hubverse model output standard column names — std_colnames","title":"Hubverse model output standard column names — std_colnames","text":"named character string standard column names used hubverse model output data files. terms currently used standard column names hubverse English. future, however, expanded provide basis hub terminology localisation.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/std_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hubverse model output standard column names — std_colnames","text":"","code":"std_colnames"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/std_colnames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hubverse model output standard column names — std_colnames","text":"object class character length 4.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a model_out_tbl or submission tbl. — subset_task_id_cols","title":"Subset a model_out_tbl or submission tbl. — subset_task_id_cols","text":"Subset model_out_tbl submission tbl.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a model_out_tbl or submission tbl. — subset_task_id_cols","text":"","code":"subset_task_id_cols(model_out_tbl)  subset_std_cols(model_out_tbl)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a model_out_tbl or submission tbl. — subset_task_id_cols","text":"model_out_tbl model_out_tbl submission tbl object. Must inherit class data.frame.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a model_out_tbl or submission tbl. — subset_task_id_cols","text":"subset_task_id_cols: object class model_out_tbl contains task ID columns. subset_std_cols: object class model_out_tbl contains hubverse standard columns (.e. columns task_id columns).","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_cols.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Subset a model_out_tbl or submission tbl. — subset_task_id_cols","text":"subset_task_id_cols(): subset model_out_tbl submission tbl include task_id columns subset_std_cols(): subset model_out_tbl submission tbl include hubverse standard columns (.e. columns task_id columns)","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a model_out_tbl or submission tbl. — subset_task_id_cols","text":"","code":"model_out_tbl_path <- system.file(\"testhubs\", \"v4\", \"simple\",   \"model-output\", \"hub-baseline\", \"2022-10-15-hub-baseline.parquet\",   package = \"hubUtils\" ) model_out_tbl <- arrow::read_parquet(model_out_tbl_path) subset_task_id_cols(model_out_tbl) #> # A tibble: 276 × 5 #>    origin_date target          horizon location age_group #>    <date>      <chr>             <int> <chr>    <chr>     #>  1 2022-10-15  wk inc flu hosp       1 US       65+       #>  2 2022-10-15  wk inc flu hosp       1 US       65+       #>  3 2022-10-15  wk inc flu hosp       1 US       65+       #>  4 2022-10-15  wk inc flu hosp       1 US       65+       #>  5 2022-10-15  wk inc flu hosp       1 US       65+       #>  6 2022-10-15  wk inc flu hosp       1 US       65+       #>  7 2022-10-15  wk inc flu hosp       1 US       65+       #>  8 2022-10-15  wk inc flu hosp       1 US       65+       #>  9 2022-10-15  wk inc flu hosp       1 US       65+       #> 10 2022-10-15  wk inc flu hosp       1 US       65+       #> # ℹ 266 more rows subset_std_cols(model_out_tbl) #> # A tibble: 276 × 3 #>    output_type output_type_id value #>    <chr>                <dbl> <int> #>  1 quantile             0.01    135 #>  2 quantile             0.025   137 #>  3 quantile             0.05    139 #>  4 quantile             0.1     140 #>  5 quantile             0.15    141 #>  6 quantile             0.2     141 #>  7 quantile             0.25    142 #>  8 quantile             0.3     143 #>  9 quantile             0.35    144 #> 10 quantile             0.4     145 #> # ℹ 266 more rows"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a vector of column names to only include task IDs — subset_task_id_names","title":"Subset a vector of column names to only include task IDs — subset_task_id_names","text":"Subset vector column names include task IDs","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a vector of column names to only include task IDs — subset_task_id_names","text":"","code":"subset_task_id_names(x)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a vector of column names to only include task IDs — subset_task_id_names","text":"x character vector column names","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a vector of column names to only include task IDs — subset_task_id_names","text":"character vector task ID names","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/subset_task_id_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a vector of column names to only include task IDs — subset_task_id_names","text":"","code":"x <- c(   \"origin_date\", \"horizon\", \"target_date\",   \"location\", \"output_type\", \"output_type_id\", \"value\" ) subset_task_id_names(x) #> [1] \"origin_date\" \"horizon\"     \"target_date\" \"location\""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/validate_model_out_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a model_out_tbl object. — validate_model_out_tbl","title":"Validate a model_out_tbl object. — validate_model_out_tbl","text":"Validate model_out_tbl object.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/validate_model_out_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a model_out_tbl object. — validate_model_out_tbl","text":"","code":"validate_model_out_tbl(tbl)"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/validate_model_out_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a model_out_tbl object. — validate_model_out_tbl","text":"tbl model_out_tbl S3 class object.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/validate_model_out_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a model_out_tbl object. — validate_model_out_tbl","text":"valid, returns model_out_tbl class object. Otherwise, throws error.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/validate_model_out_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a model_out_tbl object. — validate_model_out_tbl","text":"","code":"md_out <- as_model_out_tbl(hub_con_output) validate_model_out_tbl(md_out) #> # A tibble: 92 × 8 #>    model_id     forecast_date horizon target location output_type output_type_id #>  * <chr>        <date>          <int> <chr>  <chr>    <chr>       <chr>          #>  1 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.01           #>  2 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.025          #>  3 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.05           #>  4 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.1            #>  5 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.15           #>  6 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.2            #>  7 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.25           #>  8 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.3            #>  9 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.35           #> 10 hub-baseline 2023-05-08          1 wk ah… US       quantile    0.4            #> # ℹ 82 more rows #> # ℹ 1 more variable: value <dbl>"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/version_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare hub config schema_versions to specific version numbers from a variety of sources — version_equal","title":"Compare hub config schema_versions to specific version numbers from a variety of sources — version_equal","text":"Compare hub config schema_versions specific version numbers variety sources","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/version_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare hub config schema_versions to specific version numbers from a variety of sources — version_equal","text":"","code":"version_equal(   version,   config = NULL,   config_path = NULL,   hub_path = NULL,   schema_version = NULL )  version_gte(   version,   config = NULL,   config_path = NULL,   hub_path = NULL,   schema_version = NULL )  version_gt(   version,   config = NULL,   config_path = NULL,   hub_path = NULL,   schema_version = NULL )  version_lte(   version,   config = NULL,   config_path = NULL,   hub_path = NULL,   schema_version = NULL )  version_lt(   version,   config = NULL,   config_path = NULL,   hub_path = NULL,   schema_version = NULL )"},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/version_equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare hub config schema_versions to specific version numbers from a variety of sources — version_equal","text":"version Character string. Version number compare , must format \"v#.#.#\". config <config> class object. Usually output read_config read_config_file. config_path Character string. Path JSON config file. hub_path Either character string path local Modeling Hub directory object class <SubTreeFileSystem> created using functions arrow::s3_bucket() arrow::gs_bucket() providing string S3 GCS bucket name path Modeling Hub directory stored cloud. details consult Using cloud storage (S3, GCS) arrow package. schema_version Character string. config schema_version property compare .","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/version_equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare hub config schema_versions to specific version numbers from a variety of sources — version_equal","text":"TRUE FALSE depending schema version compares version number specified.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/version_equal.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Compare hub config schema_versions to specific version numbers from a variety of sources — version_equal","text":"version_equal(): Check whether schema version property equal specific version number. version_gte(): Check whether schema version property equal greater specific version number. version_gt(): Check whether schema version property greater specific version number. version_lte(): Check whether schema version property equal less specific version number. version_lt(): Check whether schema version property less specific version number.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/reference/version_equal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare hub config schema_versions to specific version numbers from a variety of sources — version_equal","text":"","code":"# Actual version \"v2.0.0\" hub_path <- system.file(\"testhubs/simple\", package = \"hubUtils\") # Actual version \"v3.0.0\" config_path <- system.file(\"config\", \"tasks.json\", package = \"hubUtils\") config <- read_config_file(config_path) schema_version <- config$schema_version # Check whether schema_version equal to v3.0.0 version_equal(\"v3.0.0\", config = config) #> [1] TRUE version_equal(\"v3.0.0\", config_path = config_path) #> [1] TRUE version_equal(\"v3.0.0\", hub_path = hub_path) #> [1] FALSE version_equal(\"v3.0.0\", schema_version = schema_version) #> [1] TRUE # Check whether schema_version equal to or greater than v3.0.0 version_gte(\"v3.0.0\", config = config) #> [1] TRUE version_gte(\"v3.0.0\", config_path = config_path) #> [1] TRUE version_gte(\"v3.0.0\", hub_path = hub_path) #> [1] FALSE version_gte(\"v3.0.0\", schema_version = schema_version) #> [1] TRUE # Check whether schema_version greater than v3.0.0 version_gt(\"v3.0.0\", config = config) #> [1] FALSE version_gt(\"v3.0.0\", config_path = config_path) #> [1] FALSE version_gt(\"v3.0.0\", hub_path = hub_path) #> [1] FALSE version_gt(\"v3.0.0\", schema_version = schema_version) #> [1] FALSE # Check whether schema_version equal to or less than v3.0.0 version_lte(\"v3.0.0\", config = config) #> [1] TRUE version_lte(\"v3.0.0\", config_path = config_path) #> [1] TRUE version_lte(\"v3.0.0\", hub_path = hub_path) #> [1] TRUE version_lte(\"v3.0.0\", schema_version = schema_version) #> [1] TRUE # Check whether schema_version less than v3.0.0 version_lt(\"v3.0.0\", config = config) #> [1] FALSE version_lt(\"v3.0.0\", config_path = config_path) #> [1] FALSE version_lt(\"v3.0.0\", hub_path = hub_path) #> [1] TRUE version_lt(\"v3.0.0\", schema_version = schema_version) #> [1] FALSE"},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-development-version","dir":"Changelog","previous_headings":"","what":"hubUtils (development version)","title":"hubUtils (development version)","text":"Released schemas now shipped package, internet connection longer necessary local validation. Released versions hubUtils always contain released versions schemas dev versions hubUtils (installed GitHub) may contain versions schema active development. Added subset_task_id_names() function subset task ID names character vector column names (#149). Added functions subset_task_id_cols() subset_std_cols() subset model_out_tbl submission tbl task ID standard (non-task ID) columns respectively (#149).","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-030","dir":"Changelog","previous_headings":"","what":"hubUtils 0.3.0","title":"hubUtils 0.3.0","text":"schema_id version checks silenced default read_config() read_config_file(). Add export hubValidations functions get_hub_timezone(), get_hub_model_output_dir() get_hub_file_formats() extracting hub metadata hubUtils package. Add new function get_hub_derived_task_ids() extract round hub level derived task ID values tasks.json config file.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-020","dir":"Changelog","previous_headings":"","what":"hubUtils 0.2.0","title":"hubUtils 0.2.0","text":"get_version_config(): extract version <config> class object. get_version_config_file(): extract version config file specifying config_path. get_version_hub(): extract version config file specifying hub_path. version_equal(): Check whether schema version property equal . version_gte(): Check whether schema version property equal greater . version_gt(): Check whether schema version property greater . version_lte(): Check whether schema version property equal less . version_lt(): Check whether schema version property less . <config> class objects now type attribute track type config contain (.e \"tasks\" \"admin\"). read_config() read_config_file() attempt coerce output <config> class object, warning unsuccessful (#173). Add as_config() function coerce config list <config> class object (hubAdmin package) (#173). Fix bug extract_schema_version() single digits version component extracted. Fix documentation get_schema_version_latest() longer use v1.0.0","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-017","dir":"Changelog","previous_headings":"","what":"hubUtils 0.1.7","title":"hubUtils 0.1.7","text":"CRAN release: 2024-09-18 First submission CRAN Removed hubData dependency","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-012","dir":"Changelog","previous_headings":"","what":"hubUtils 0.1.2","title":"hubUtils 0.1.2","text":"Bug fix: Corrected bug v3 config utilities configs detected v3 v3.0.0 , just v3.0.0. Thanks @M-7th reporting.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-011","dir":"Changelog","previous_headings":"","what":"hubUtils 0.1.1","title":"hubUtils 0.1.1","text":"Remove hubAdmin Suggests dependency moving test hub configuration validation CI (resolved: @annakrystalli, https://github.com/hubverse-org/hubUtils/issues/158)","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-010","dir":"Changelog","previous_headings":"","what":"hubUtils 0.1.0","title":"hubUtils 0.1.0","text":"Add read_config_file() helper function read JSON config file file path. Add extract_schema_version() helper function extract schema version schema id config schema_version property character string. Add helpers is_v3_config, is_v3_config_file is_v3_config_hub check whether config object, file hub using schema version 3.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-002","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.2","title":"hubUtils 0.0.2","text":"Missing dependency (jsonlite) bug fix.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-001-major-release","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.1 MAJOR RELEASE","title":"hubUtils 0.0.1 MAJOR RELEASE","text":"Exported functions moved hubData: connect_hub(), connect_model_output(), expand_model_out_val_grid(), create_model_out_submit_tmpl(), coerce_to_character(), coerce_to_hub_schema() create_hub_schema(). hubUtils functions re-exported hubData: as_model_out_tbl(), validate_model_out_tbl(), model_id_split() model_id_merge(). Functions creating config files: create_config(), create_model_task(), create_model_tasks(), create_output_type(), create_output_type_cdf(), create_output_type_mean(), create_output_type_median(), create_output_type_pmf(), create_output_type_quantile(), create_output_type_sample(), create_round(), create_rounds(), create_target_metadata(), create_target_metadata_item(), create_task_id(), create_task_ids(). Functions validating config files: validate_config(),validate_model_metadata_schema(), validate_hub_config(), view_config_val_errors().","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009019","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9019","title":"hubUtils 0.0.0.9019","text":"Minor internal bug fixes documentation updates.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009018","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9018","title":"hubUtils 0.0.0.9018","text":"Added US European location datasets. can used e.g. assigning location task ID values tasks.json config files programmatically (#127).","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009017","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9017","title":"hubUtils 0.0.0.9017","text":"connect_hub() connect_model_output() now identify report files present opened connection successful (#124) Introduced number minor documentation clarifications bug fixes (#129, #128, #121, #130)","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009016","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9016","title":"hubUtils 0.0.0.9016","text":"Added validate_model_metadata_schema() function included part validate_hub_config() (#110 & #112).","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009015","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9015","title":"hubUtils 0.0.0.9015","text":"Added load_model_metadata() function compile hub model metadata.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009014","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9014","title":"hubUtils 0.0.0.9014","text":"Added coerce_to_character() function coercing model output columns character. can much faster coercing coerce_to_hub_schema(), especially dates. all_character: allow returning character columns. as_arrow_table: allow returning arrow data table. bind_model_tasks: allow returning list model task level grids. Bug fix. Handle situation expand_model_out_val_grid() required_vals_only = TRUE yet required task ID columns consistent across modeling tasks. function now pads missing task ID column values NAs.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009013","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9013","title":"hubUtils 0.0.0.9013","text":"Introduced coerce_to_hub_schema() function applied create_model_out_submit_tmpl() & expand_model_out_val_grid() ensure column data types returned tibbles consistent hub’s schema (#100). Fixed bug optional mean/median output types included erroneously required_vals_only = TRUE. Exported function get_round_task_id_names() (#99). Memoized function read_config() (#101).","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009012","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9012","title":"hubUtils 0.0.0.9012","text":"Fixed bug (#95 & #97) causing connect_hub() error \"csv\" accepted hub file format CSV model output directory. Now connect_hub() checks presence files accepted file format opens datasets file formats files exists. files accepted file_format model output directory, S3 hub_connection object returned consists empty list. Fixed bug (#96) required hubUtils loaded std_colnames internally available.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009011","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9011","title":"hubUtils 0.0.0.9011","text":"Changed default behavior create_model_out_submit_tmpl(). Function now, default, returns rows complete cases behavior controlled argument complete_cases_only. Argument remove_empty_cols also removed.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009010","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9010","title":"hubUtils 0.0.0.9010","text":"Support Hubs using schema earlier v2.0.0 deprecated. Currently warning issued interacting Hubs. Support eventually retired completely errors produced Hubs using older config schema. Added create_model_out_submit_tmpl() generating round specific model output template tibbles (#82). expand_model_out_val_grid() creating expanded grid valid task ID output type ID across round modeling tasks output types. get_round_idx(): getting integer index element config_tasks$rounds character round identifier maps . get_round_ids(): getting list character vector Hub round IDs. Check task_id output_type_id values unique across required optional properties. rounds round_id_from_variable TRUE, check specification task_id set round_id consistent across modeling tasks. Check round_id values unique across rounds. Exported object std_colnames contains standard column names used hubverse model output data files, use hubverse packages (#88).","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009009","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9009","title":"hubUtils 0.0.0.9009","text":"Added as_model_out_tbl() function standardize model output data converting model_out_tbl S3 class object. (#32, #33, #63, #64, #66) support back-compatibility model output data older hubs, added functions model_id_merge() model_id_split() create model_id column separate team_abbr model_abbr columns vice versa (#63).","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009008","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9008","title":"hubUtils 0.0.0.9008","text":"Added argument output_type_id_datatype connect_hub() allow overriding default behavior automatically detecting output_type_id column data type tasks.json config file (#70). Exposed create_hub_schema() argument partitions connect_hub() function accommodate custom hub partitioning. Added argument partition_names connect_model_output() accommodate custom hub partitioning. Added argument schema connect_model_output() allow overriding default arrow schema auto-detection. Moved jsonvalidate package Imports Hub administrator functionality accessible standard installation. Removed argument format create_hub_schema() now creates schema tasks.json config file, regardless data file format (#80).","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009007","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9007","title":"hubUtils 0.0.0.9007","text":"New function validate_hub_config() allows maintainers check validity hub config files single call. Function view_config_val_errors() also modified create combined report hub config files output validate_hub_config(). Breaking change: model-output data expected output_type & output_type_id instead type & type_id respectively.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009006","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9006","title":"hubUtils 0.0.0.9006","text":"connect_hub() now automatically determines output_type_id column data type tasks.json config file coercing highest possible data type, “character” lowest denominator. Introduced function create_hub_schema() determining schema data hub’s model-output directory tasks.json config file. connect_hub() now allows establishing connections hubs multiple file type formats. create_output_type_categorical() function renamed create_output_type_pmf(). extracting data via hub connection, column containing model identification information, inferred model-output data directory partitions, renamed “model” “model_id”.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009005","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9005","title":"hubUtils 0.0.0.9005","text":"Re-implemented connect_hub() function open connection model-output data implemented arrow FileSystemDataset object. allows users create custom dplyr queries access model output data.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009004","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9004","title":"hubUtils 0.0.0.9004","text":"Added functionality help create JSON configuration files.","code":""},{"path":"https://hubverse-org.github.io/hubUtils/dev/news/index.html","id":"hubutils-0009003","dir":"Changelog","previous_headings":"","what":"hubUtils 0.0.0.9003","title":"hubUtils 0.0.0.9003","text":"Added validate_config() function validate JSON configuration files Hub schema well function view_config_val_errors() viewing concise easier navigate table validation errors. Added NEWS.md file track changes package.","code":""}]
