% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_output_types.R
\name{convert_output_type}
\alias{convert_output_type}
\title{Transform between output types}
\usage{
convert_output_type(
  model_out_tbl,
  new_output_type,
  new_output_type_id = NA,
  n_samples = 10000,
  ...
)
}
\arguments{
\item{model_out_tbl}{an object of class \code{model_out_tbl} containing predictions
with a single, unique value in the \code{output_type} column.}

\item{new_output_type}{\code{string} indicating the desired output_type after
transformation (\code{"mean"}, \code{"median"}, \code{"quantile"}, \code{"cdf"}); can also be a
vector if multiple new output_types are desired.}

\item{new_output_type_id}{\code{vector} indicating desired output_type_ids for
corresponding \code{new_output_type}; only needs to be specified if
\code{new_output_type} includes \code{"quantile"} or \code{"cdf"} (see details for how to
specify when both \code{"quantile"} and \code{"cdf"} are desired.)}

\item{n_samples}{\code{numeric} that specifies the number of samples to use when
calculating output_types from an estimated quantile function. Defaults to \code{1e4}.}

\item{...}{parameters that are passed to \code{distfromq::make_q_fn}, specifying
details of how to estimate a quantile function from provided quantile levels
and quantile values for \code{"quantile"} or \code{"cdf"} output types.}
}
\value{
object of class \code{model_out_tbl} containing (only) the new output_type(s)
for each unique combination of task IDs for each model
}
\description{
Transform between output types for each unique combination of task IDs for
each model. Conversion must be from a single starting output type to one or more
new output types, and the resulting output will only contain the new output types.
See details for supported conversions.
}
\details{
The following transformations are supported: (i) \code{"sample"} can be
transformed to \code{"mean"}, \code{"median"}, \code{"quantile"}, or \code{"cdf"}; (ii)
\code{"quantile"} can be transformed to \code{"mean"}, \code{"median"}, or \code{"cdf"}; and
(iii) \code{"cdf"} can be transformed to \code{"mean"}, \code{"median"}, or \code{"quantile"}.

For \code{"quantile"} and \code{"cdf"} starting output types, we use the following approach:
\enumerate{
\item Interpolate and extrapolate from the provided quantiles or probabilities
for each component model to obtain an estimate of the cdf of that distribution.
\item Draw samples from the distribution for each component model. To reduce
Monte Carlo variability, we use quasi-random samples corresponding to
quantiles of the estimated distribution.
\item Calculate the desired quantity (e.g., mean).
If the median quantile is provided in the \code{model_out_tbl} object (i.e., the
original output_type is \code{"median"} and 0.5 is contained in the original
output_type_id), the median value is extracted and returned directly.
}

If both \code{"quantile"} and \code{"cdf"} output_types are desired, \code{new_output_type_id}
should be a named list, where each element specifies the corresponding
\code{new_output_type_id}. See examples for an illustration.
}
\examples{
# We illustrate the conversion between output types using normal distributions,
ex_quantiles <- c(0.25, 0.5, 0.75)
model_out_tbl <- expand.grid(
  group1 = c(1,2),
  model_id = "A",
  output_type = "quantile",
  output_type_id = ex_quantiles
) \%>\%
dplyr::mutate(value = qnorm(p = output_type_id, mean = group1))

convert_output_type(model_out_tbl, new_output_type = "median", new_output_type_id = NA)

# Next, we illustrate conversion from samples to quantile and cdf
ex_bins <- seq(-2,2,1)
ex_quantiles <- c(0.25, 0.5, 0.75)
model_out_tbl <- expand.grid(
  group1 = c(1,2),
  model_id = "A",
  output_type = "sample",
  output_type_id = 1:100
) \%>\%
dplyr::mutate(value = rnorm(200, mean = group1))

convert_output_type(model_out_tbl, new_output_type = c("quantile", "cdf"),
   new_output_type_id = list("quantile" = ex_quantiles, "cdf" = ex_bins))

}
